{"version":3,"sources":["utils/pixiJs.ts","utils/tiledMapData.ts","hooks/useTilesetsLoader.ts","components/pixi/Viewport.tsx","utils/isometric.ts","constants/tiles.ts","components/pixi/FloorTileLayer.tsx","components/pixi/Marker.tsx","utils/tiles.ts","components/pixi/ParticleEmitter.ts","components/pixi/effects/smoke1/index.tsx","components/pixi/MapObject.tsx","components/pixi/Map/index.tsx","components/playerBridge/style/close.svg","components/playerBridge/index.tsx","components/FinderBox/index.tsx","components/IFrameModal/index.tsx","components/ScenariosBox/styles/check.svg","components/ScenariosBox/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TiledLayerType","Orientation","RenderOrder","loadResource","path","callback","loader","PIXI","shared","resources","add","load","_","useTilesetsLoader","determineTilesetSpritesheetPath","useState","tilesetsTextures","setTilesets","data","setData","useEffect","nextTileset","nextTilesetToload","tilesetName","name","resource","error","Error","newTilesets","loadComplete","undefined","loadTilesets","value","tilesets","find","t","Viewport","forwardRef","props","ref","app","useApp","window","PixiComponentViewport","PixiComponent","create","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","on","event","onClick","minScale","maxScale","drag","pinch","wheel","clamp","direction","setZoom","clampZoom","decelerate","tileLocationToPosition","location","horizontalTiles","verticalTiles","x","getOriginX","TILE_WIDTH","y","require","FloorTileLayer","tilemap","CompositeRectTileLayer","texture","applyProps","instance","oldProps","layer","tileset","spritesheet","i","Math","floor","position","tile","tiles","id","firstgid","tileName","image","substr","lastIndexOf","addFrame","textures","length","Marker","useRef","bounce","process","gsap","from","current","duration","ease","pixi","visible","scale","delay","bounceAnim","to","yoyo","repeat","random","kill","onDragStart","onDragEnd","onDragMove","anchor","interactive","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","findTileset","gid","ParticleEmitter","newProps","config","newP","applyDefaultProps","emitter","this","_emitter","particles","elapsed","performance","now","emit","tick","raf","requestAnimationFrame","update","willUnmount","cancelAnimationFrame","Smoke1","smoke","pivot","MapObject","o","mapData","found","checkRef","polygon","points","reduce","acc","push","key","type","draw","graphics","beginFill","drawPolygon","endFill","width","height","TILE_HEIGHT","actualGid","flipVert","split","textureName","console","warn","pointerdown","renderEffects","properties","offset","p","innerWidth","innerHeight","Map","content","foundSituations","onSituationClick","jsonPath","mapJson","setMapData","ROUND_PIXELS","SCALE_MODE","SCALE_MODES","NEAREST","mapWidth","mapHeight","viewportRef","moveCenter","renderLayerTiles","tileData","layerIndex","map","columns","zIndex","renderObjects","objects","index","indexOf","renderScenarioMarker","scenario","pointertap","onScenarioClick","handleMarkerClick","options","sharedLoader","backgroundColor","parseBackgroundColor","backgroundcolor","className","firstTileGid","getTiles","Boolean","clearTextureCache","_texture","renderFloor","layers","l","sortableChildren","filter","tilelayer","objectgroup","renderObjectLayers","Object","entries","scenarios","tilesetData","asString","parseInt","substring","rawData","encoding","compression","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref3","_ref4","cx","cy","r","_ref5","d","transform","_ref6","_ref7","_ref8","x1","y1","x2","y2","_ref9","_ref","svgRef","title","viewBox","ForwardRef","PlayerBridge","gameDataReceived","disableBackButton","send","payload","webkit","stringifiedMessageObj","JSON","stringify","messageHandlers","cordova_iab","postMessage","parent","setGameData","gameData","GAMEDATA","getGameData","addEventListener","msg","FinderBox","instruction","situations","IFrameModal","onClose","contentWindow","src","url","style","enableBackground","xmlSpace","ScenarioBox","scenariosNames","scenarioName","solvedScenarios","renderContent","PixiPlugin","registerPIXI","registerPlugin","App","setContent","setFoundSituations","iframe","setIframe","handleGameDataReceived","timeout","setTimeout","GAME_DATA","log","fetch","then","response","json","clearTimeout","finder","final","situation","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"63BAiCO,ICiCKA,EAWPC,EAOAC,EDnDQC,EAAe,SAACC,EAAcC,GACvC,IAAMC,EAASC,SAAYC,OACvBF,EAAOG,UAAUL,GACjBC,EAASC,EAAOG,UAAUL,IAG9BE,EAAOI,IAAIN,GAAMO,MAAK,SAACC,EAAGH,GAAgBJ,EAASI,EAAUL,Q,iBC2BrDJ,K,sBAAAA,E,2BAAAA,M,cAWPC,K,wBAAAA,E,sBAAAA,E,sBAAAA,E,uBAAAA,M,cAOAC,K,mBAAAA,E,uBAAAA,E,iBAAAA,E,sBAAAA,M,yBC1CUW,EArCW,SAACC,GAA4E,IAAD,EAC1DC,mBAA0C,IADgB,mBAC3FC,EAD2F,KACzEC,EADyE,OAE1EF,qBAF0E,mBAE3FG,EAF2F,KAErFC,EAFqF,KA8BlG,OAtBAC,qBAAU,WACN,GAAKF,EAAL,CAEA,IAAMG,EAAcC,EAAkBJ,EAAMF,GAC5C,GAAKK,EAAL,CAEA,IAAME,EAAcF,EAAYG,KAC1BpB,EAAOU,EAAgCO,GAC7ClB,EAAa,GAAD,OAAIC,IAAQ,SAACqB,GACrB,GAAIA,EAASC,MACT,MAAM,IAAIC,MAAJ,kBAAqBvB,EAArB,aAA8BqB,EAASC,QAEjD,IAAME,EAAW,2BACVZ,GADU,kBAEZO,EAAcE,IAEnBR,EAAYW,UAEjB,CAACV,EAAMJ,EAAiCE,IAIpC,CACHa,eAHmBX,QAAsDY,IAA9CR,EAAkBJ,EAAMF,GAInDe,aA5BiB,SAACC,GAClBb,EAAQa,IA4BRhB,qBAOFM,EAAoB,SAACW,EAA8BjB,GACrD,OAAOiB,EAASC,MAAK,SAACC,GAClB,OAAQnB,EAAiBmB,EAAEX,U,QC7B7BY,EAAWC,sBAA8B,SAACC,EAAOC,GACrD,IAAMC,EAAMC,mBAGZ,OAFAC,OAAOnC,KAAOA,EAEP,kBAACoC,EAAD,eAAuBH,IAAKA,GAASF,EAArC,CAA4CC,IAAKA,QAOpDI,EAAwBC,wBAAc,WAAY,CACtDC,OAAQ,SAACP,GACP,IAAMQ,EAAW,IAAIC,IAAa,CAChCC,YAAaV,EAAMU,YACnBC,aAAcX,EAAMW,aACpBC,WAAYZ,EAAMY,WAClBC,YAAab,EAAMa,YACnBC,OAAQd,EAAME,IAAIY,SAIpBN,EAASO,GAAG,WAAW,SAACC,GAAehB,EAAMiB,SAASjB,EAAMiB,QAAQD,MAVvB,MAezChB,EAFFkB,gBAb2C,MAahC,GAbgC,IAezClB,EADFmB,gBAd2C,MAchC,EAdgC,EA0B7C,OATAX,EACGY,OACAC,QACAC,QACAC,MAAM,CAAEC,UAAW,QACnBC,QAAQ,IACRC,UAAU,CAAER,WAAUC,aACtBQ,aAEInB,KAGIV,ICxDF8B,EAAyB,SAACC,EAA4BC,EAAyBC,GAC1F,IAAMC,EAAIC,EAAWH,EAAiBC,GAAkBG,GAAkBL,EAAS,GAAMK,IAAmBL,EAAS,GAC/GM,ECJmB,IDIdN,EAAS,GAAKA,EAAS,IAAoB,ECJ7B,GACD,IDIxB,OAAO,IAAI5D,QAAW+D,EAAGG,IAGdF,EAAa,SAACH,EAAyBC,GAClD,OAAO,IAACA,EAAgBD,GCVA,KDUyCC,EAAgBD,GAAgC,EAAK,GELxH1B,OAAOnC,KAAOA,EACdmE,EAAQ,IAYR,IA8BeC,EA9BQ/B,wBAA0B,iBAAkB,CACjEC,OADiE,SAC1DP,GAIL,OADkB,IAAII,OAAOnC,KAAKqE,QAAQC,uBAAuB,EAAG,CAACvC,EAAMwC,WAI7EC,WARiE,SAQtDC,EAAUC,EAAiB3C,GAAe,IAC5C4C,EAAgE5C,EAAhE4C,MAAOC,EAAyD7C,EAAzD6C,QAASd,EAAgD/B,EAAhD+B,cAAeD,EAAiC9B,EAAjC8B,gBAAiBgB,EAAgB9C,EAAhB8C,YACvD,GAAKF,EAAMhE,KAGX,IALkD,eAKzCmE,GACP,GAAIH,EAAMhE,KAAKmE,GAAK,EAAG,CACrB,IAAMlB,EAA6B,CAACkB,EAAIjB,EAAiBkB,KAAKC,MAAMF,EAAIjB,IAClEoB,EAAWtB,EAAuBC,EAAUC,EAAiBC,GAG7DoB,EAAON,EAAQO,MAAOxD,MAAK,SAACC,GAAD,OAAOA,EAAEwD,KAAOT,EAAMhE,KAAKmE,GAAKF,EAAQS,YACnEC,EAAQ,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAMK,MAAMC,QAAW,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMK,MAAME,YAAY,MAAO,GAEnEhB,EAASiB,SAASb,EAAYc,SAASL,GACrCL,EAASlB,EAAIE,GACbgB,EAASf,EDzCQ,MC8BdY,EAAI,EAAGA,EAAIH,EAAMhE,KAAKiF,OAAQd,IAAM,EAApCA,M,QC6DEe,EA9EA,SAAC9D,GACZ,IAAMC,EAAM8D,iBAAoB,MAC1BnF,EAAOmF,mBAFgD,EAG7BtF,mBAAqBuB,EAAMkD,UAAY,IAAIjF,SAHd,mBAGtDiF,EAHsD,KAKvDM,GALuD,KAK/CxD,EAAMgE,OAAN,UAAkBC,OAAlB,mCAAsEA,OAAtE,gCAEdnF,qBAAU,WAENoF,IAAKC,KAAKlE,EAAImE,QAAS,CACrBC,SANgB,EAOhBC,KAAM,sBACNC,KAAM,CACJC,SAAS,EACTC,MAAO,MAERC,MAAM1E,EAAM0E,OAAS,KACzB,CAAC1E,EAAM0E,QAEV5F,qBAAU,WACN,IAAI6F,EAaJ,OAXqB,IAAjB3E,EAAMgE,SACNW,EAAaT,IAAKU,GAAG3E,EAAImE,QAAS,CAC9BC,SAAU,GACVQ,MAAM,EACNC,QAAS,EACTP,KAAM,CAEFpC,EAAG,UAENuC,MA3BS,EA2Ba1B,KAAK+B,WAE7B,WAAO,IAAD,EACC,QAAV,EAAAJ,SAAA,SAAYK,UAEjB,CAAChF,EAAMgE,SAEV,IAAMiB,EAAc,SAACjE,KASfkE,EAAY,WACdtG,EAAKwF,aAAU5E,GAGb2F,EAAa,aASnB,OACI,kBAAC,SAAD,iBACSnF,EADT,CAEIoF,OAAQ,CAAC,GAAK,IACdlC,SAAUA,EACVjD,IAAKA,EACLoF,aAAa,EACb7B,MAAOA,EACP8B,UAAWL,EACXM,WAAYN,EACZO,QAASN,EACTO,eAAgBP,EAChBQ,UAAWP,EACXQ,UAAWR,MCpFVS,EAAc,SAACC,EAAalG,GAErC,IADA,IAAIkD,EACKE,EAAIpD,EAASkE,OAAS,EAAGd,GAAK,MACrCF,EAAUlD,EAASoD,IACPO,UAAYuC,GAFgB9C,KAM1C,OAAOF,G,wBC+CIiD,EAjDSxF,wBAAsF,kBAAmB,CAC7HC,OAD6H,WAE3H,OAAO,IAAItC,qBAGbwE,WAL6H,SAKlHC,EAAUC,EAAiBoD,GAAkB,IAC9CvC,EAA2BuC,EAA3BvC,MAAOwC,EAAoBD,EAApBC,OAAWC,EAD2B,YAClBF,EADkB,oBAIrDG,4BAAkBxD,EAAUC,EAAUsD,GAEtC,IAAIE,EAAWC,KAAaC,SAC5B,IAAKF,EAAS,CACZA,EAAU,IAAIG,IACZ5D,EACA,CAACzE,UAAakG,KAAKX,IACnBwC,GAGF,IAAIO,EAAUC,YAAYC,MAc1BN,EAAQO,MAAO,EAZF,SAAPC,IACJR,EAAQS,IAAMC,sBAAsBF,GACpC,IAAMF,EAAMD,YAAYC,MAMxBN,EAAQW,OAAyB,MAAjBL,EAAMF,IAEtBA,EAAUE,EAKZE,GAEDP,KAAaC,SAAWF,GAG3BY,YAzC6H,WA0CtHX,KAAaC,WACfD,KAAaC,SAASK,MAAO,EAC9BM,qBAAsBZ,KAAaC,SAASO,SCjCrCK,EAbA,SAACjH,GAAoD,IAAD,EACtCA,EAAjBgC,SADuD,MACnD,EADmD,IACtChC,EAAVmC,SADgD,MAC5C,EAD4C,EAE/D,OACI,kBAAC,EAAD,CACIjD,KAAK,QACL8C,EAAGA,EACHG,EAAGA,EACHqB,MAAK,UAAKS,OAAL,8BACL+B,OAAQkB,EACRC,MAAO,EAAC,GAAiB,MC+GtBC,EA7GG,SAACpH,GACjB,IAAMqH,EAAIrH,EAAMpB,KACT0I,EAA6CtH,EAA7CsH,QAAS5I,EAAoCsB,EAApCtB,iBAAkB6I,EAAkBvH,EAAlBuH,MAAOtG,EAAWjB,EAAXiB,QAGnCuG,EAAWzD,iBAAO,MAcxB,GAbAjF,qBAAU,WAEH0I,EAASpD,SACdF,IAAKC,KAAKqD,EAASpD,QAAS,CAC1BC,SANkB,EAOlBC,KAAM,sBACNC,KAAM,CACJC,SAAS,EACTC,MAAO,QAGV,CAAC8C,IAEAF,EAAEI,QAAS,CAAC,IAER5F,EAA6B,CADnBwF,EAATrF,ENrCgB,GMqCPqF,EAANlF,ENrCa,IM2CjBuF,EAASL,EAAEI,QAAQE,QAAO,SAACC,EAAelI,GAG9C,OAFAkI,EAAIC,KAAKnI,EAAMyC,EAAIzC,EAAMsC,GACzB4F,EAAIC,KAAMnI,EAAMyC,EAAI,EAAMzC,EAAMsC,EAAI,GAC7B4F,IACN,IAEH,OACE,kBAAC,WAAD,CACEE,IAAG,UAAKT,EAAEU,MAAP,OAAcV,EAAEnI,MACnB8I,KAAM,SAAAC,GACJA,EAASC,UAAU,UACnBD,EAASE,YAAYT,GACrBO,EAASG,WAEXlF,SAAUtB,EAAuBC,EAAUyF,EAAQe,MAAOf,EAAQgB,QAClEnB,MAAO,CAACjF,GAAgBqG,MAIzB,GAAIlB,EAAExB,IAAK,KAEP7D,EAAcqF,EAAdrF,EAAGG,EAAWkF,EAAXlF,EAAG0D,EAAQwB,EAARxB,IACPhE,EAA6B,CACjCG,ENlEqB,GMkEH,EAClBG,ENnEqB,GMmEH,GAEdqG,EAAkB,UAAN3C,EACZhD,EAAU+C,EAAY4C,EAAWlB,EAAS3H,UAChD,IAAKkD,IAAYA,EAAQO,OAAiB,IAARyC,EAAW,OAAO,KAGpD,IACM4C,EAAkC,KAAhB,WAAN5C,GACZpB,EAA0B,CAAC,EAAG,GAFG,KAAhB,WAANoB,KAIfpB,EAAM,KAAO,GAEXgE,IACFhE,EAAM,KAAO,GAEf,IAAMjC,EAAUK,EAAQO,MAAMxD,MAAK,SAACC,GAAD,OAAOA,EAAEwD,KAAOmF,EAAY3F,EAAQS,YACvE,IAAKd,EAAS,OAAO,KAtBP,MA+BVA,EAAQgB,MAAMkF,MAAM,KA/BV,mBA6BZ5F,GA7BY,WA8BZ6F,EA9BY,KAuCd,OAPKjK,EAAiBoE,IACpB8F,QAAQC,KAAR,qCAA2C/F,EAA3C,YAA0DpE,IAEvDA,EAAiBoE,GAAac,SAAU+E,IAC3CC,QAAQC,KAAR,iCAAuC/F,EAAvC,YAAsD6F,IAIpD,kBAAC,SAAD,CACEzJ,KAAI,UAAKmI,EAAEnI,KAAP,aAAgB8C,EAAhB,YAAqBG,EAArB,aAA2BwG,EAA3B,KACJlE,MAAOA,EACPjC,QAAS9D,EAAiBoE,GAAac,SAAU+E,GACjDvD,OAAQ,CAAC,EAAG,GACZ+B,MAAO,CAACjF,GAAgB,GACxBgB,SAAUtB,EAAuBC,EAAUyF,EAAQe,MAAOf,EAAQgB,QAClEQ,YAAa,kBAAM7H,EAAQoG,EAAEnI,OAC7BmG,cAAegC,EAAEnI,MAEhB6J,EAAc1B,EAAE2B,YAChBzB,GAAS,kBAAC,SAAD,CACRtH,IAAKuH,EACLhE,MAAK,UAAKS,OAAL,wBACLQ,MAAO,GACPW,OAAQ,EAAE,GAAI,GACd+B,MAAO,CAACjF,GAAgB,MAKlC,OAAO,MAKH6G,EAAgB,SAACC,GACnB,IAAKA,EAAY,OAAO,KACxB,IAAIhH,EAAGG,EACD8G,EAASD,EAAWpJ,MAAK,SAAAsJ,GAAC,MAAe,WAAXA,EAAEhK,QACtC,GAAI+J,EAAQ,CAAC,IAAD,EACDA,EAAOvJ,MAAMgJ,MAAM,KADlB,mBACT1G,EADS,KACNG,EADM,KAIZ,OACE,kBAAC,EAAD,CACEH,EAAGA,EACHG,EAAGA,KC3HLzB,EAAcN,OAAO+I,WACrBxI,EAAeP,OAAOgJ,YAiB5B,IAgOeC,EAhOH,SAACrJ,GAAkB,IACrBsJ,EAA8CtJ,EAA9CsJ,QAASC,EAAqCvJ,EAArCuJ,gBAAiBC,EAAoBxJ,EAApBwJ,iBAC5BC,EAAWH,EAAQI,QAFG,EAGEjL,qBAHF,mBAGrB6I,EAHqB,KAGZqC,EAHY,KAI5B1L,WAAc2L,cAAe,EAJD,MAUxBrL,EAAkBC,GAHpBe,EAP0B,EAO1BA,aACAE,EAR0B,EAQ1BA,aACAf,EAT0B,EAS1BA,iBAGFI,qBAAU,WACRb,WAAc4L,WAAaC,cAAYC,QACvClM,EAAa,GAAD,OAAIoG,OAAJ,YAA8BwF,IAAY,SAACtK,GACrDwK,EAAWxK,EAASP,WAErB,CAAC6K,IAEJ3K,qBAAU,WACJwI,GACF7H,EAAa6H,EAAQ3H,YAEtB,CAACF,EAAc6H,IAGlB,IAAM0C,EAAW,MAAS,OAAP1C,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,KAAa,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASgB,SAAU,IACxD2B,EAAY,MAAS,OAAP3C,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,KAAa,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASgB,SAAU,IP5DvC,IO8DlB4B,EAAcnG,iBAAqB,MAUzC,GATAjF,qBAAU,WAEJoL,EAAY9F,SACK8F,EAAY9F,QACpB+F,WAAWH,EAAW,EAAGC,EAAY,KAEjD,CAAC3C,EAAS2C,EAAWD,EAAUtL,KAG7Ba,IAAiB+H,EACpB,OACE,2CAIJ,IA4CM8C,EAAmB,SAACC,EAAoBzH,EAAuB0H,GACnE,OAAOD,EAASE,KAAI,SAAC1E,EAAK9C,GACxB,IAAMyF,EAAkB,UAAN3C,EACZhD,EAAU+C,EAAY4C,EAAWlB,EAAS3H,UAChD,IAAKkD,IAAYA,EAAQO,OAAiB,IAARyC,EAAW,OAAO,KAEpD,IAAM2E,EAAUlD,EAASe,MACnBrG,EAAKe,EAAIyH,EACTrI,EAAIa,KAAKC,MAAMF,EAAIyH,GAGnB/B,EAAkC,KAAhB,WAAN5C,GAEZpB,EAA0B,CAAC,EAAG,GAHG,KAAhB,WAANoB,KAKfpB,EAAM,KAAO,GAEXgE,IACFhE,EAAM,KAAO,GAEf,IAAMjC,EAAUK,EAAQO,MAAMxD,MAAK,SAACC,GAAD,OAAOA,EAAEwD,KAAOmF,EAAY3F,EAAQS,YACvE,IAAKd,EAAS,OAAO,KApBS,MA6B1BA,EAAQgB,MAAMkF,MAAM,KA7BM,mBA2B5B5F,GA3B4B,WA4B5B6F,EA5B4B,KAqC9B,OAPKjK,EAAiBoE,IACpB8F,QAAQC,KAAR,qCAA2C/F,EAA3C,YAA0DpE,IAEvDA,EAAiBoE,GAAac,SAAU+E,IAC3CC,QAAQC,KAAR,iCAAuC/F,EAAvC,YAAsD6F,IAItD,kBAAC,SAAD,CACEb,IAAK/E,EACL7D,KAAI,UAAK0D,EAAM1D,KAAX,aAAoB8C,EAApB,YAAyBG,EAAzB,aAA+BwG,EAA/B,KACJlE,MAAOA,EACPjC,QAAS9D,EAAiBoE,GAAac,SAAU+E,GACjDvD,OAAQ,CAAC,EAAG,GACZ+B,MAAO,CAACjF,GAAgB,GACxBgB,SAAUtB,EAAuB,CAACI,EAAGG,GAAImF,EAAQe,MAAOf,EAAQgB,QAChEmC,OAAY,IAAJ1H,EAAUuH,QAcpBI,EAAgB,SAACC,GACrB,OAAOA,EAAQJ,KAAI,SAAClD,EAAGuD,GACrB,IAAMrD,EAAQgC,EAAgBsB,QAAQxD,EAAEnI,OAAS,EACjD,OACE,kBAAC,EAAD,CACEN,KAAMyI,EACNS,IAAG,UAAKT,EAAEU,MAAP,OAAcV,EAAEnI,MAAhB,OAAuB0L,GAC1BrD,MAAOA,EACP7I,iBAAkBA,EAClB4I,QAASA,EACTrG,QAASuI,QAWXsB,EAAuB,SAAC5L,EAAc6L,EAAoBH,GAC9D,IAAMlG,EAAgB,GAARkG,EACR1H,EAAWtB,EAAuBmJ,EAASlJ,SAA8ByF,EAAQe,MAAOf,EAAQgB,QAGtG,OACE,kBAAC,EAAD,CACEpF,SAAUA,EACV8H,WAAY,kBAZQ,SAAC9L,EAAc6L,GACvC/K,EAAMiL,gBAAgB/L,GAWAgM,CAAkBhM,IACpCwF,MAAOA,EACPV,QANW,EAOX8D,IAAK5I,EACLA,KAAMA,KAKNiM,EAAU,CACdC,cAAc,EACdC,gBAAiBC,EAAoB,OAAChE,QAAD,IAACA,OAAD,EAACA,EAASiE,kBAGjD,OACE,kBAAC,QAAD,CAAOlD,MAAO3H,EAAa4H,OAAQ3H,EAAc6K,UAAU,aAAaL,QAASA,GAC/E,kBAAC,EAAD,CACEvK,WAAYoJ,EACZnJ,YAAaoJ,EACbvJ,YAAaA,EACbC,aAAcA,EACdV,IAAKiK,GA3JS,SAACtH,GACnB,IAAKA,EAEH,OADAgG,QAAQC,KAAK,qCACN,KAET,IACM4C,EADOC,EAAS9I,GACIhD,KAAK+L,SAC/B,IAAKF,EAEH,OADA7C,QAAQC,KAAK,qCACN,KAET,IACMhG,EAAU+C,EADiB,UAAf6F,EACqBnE,EAAS3H,UAChD,IAAKkD,EAEH,OADA+F,QAAQC,KAAK,0CACN,KAET,IAAM1J,EAAWT,EAAiBmE,EAAQ3D,MAG1C,OAFAjB,QAAW2N,oBAENzM,EAAS2D,YAKZ,kBAAC,EAAD,CACEN,QAAUrD,EAAS2D,YAAoB+I,SACvC9J,cAAeuF,EAAQgB,OACvBxG,gBAAiBwF,EAAQe,MACzBzF,MAAOA,EACPC,QAASA,EACTC,YAAa3D,EAAS2D,eAVxB8F,QAAQC,KAAR,mEAAyEhG,EAAQ3D,OAC1E,MAuIJ4M,CAAYxE,EAAQyE,OAAOnM,MAAK,SAAAoM,GAAC,MAAe,UAAXA,EAAE9M,SAYxC,kBAAC,YAAD,CAAW+M,kBAAkB,GACb3E,EAAQyE,OArIdG,QAAO,SAAAF,GAAC,OAAIA,EAAExH,SAAsB,UAAXwH,EAAE9M,MAAoB8M,EAAEjE,OAASrK,EAAeyO,aACpF5B,KAAI,SAAC3H,EAAuBgI,GAC7B,IAAMhM,EAAO8M,EAAS9I,GACtB,OAAOwH,EAAiBxL,EAAMgE,EAAOgI,OAyDd,SAACmB,GAE1B,OAAOA,EAAOG,QAAO,SAAAF,GAAC,OAAIA,EAAExH,SAAWwH,EAAEjE,OAASrK,EAAe0O,eAC9D7B,KAAI,SAAC3H,GACJ,OAAO8H,EAAc9H,EAAM+H,YAuE1B0B,CAAmB/E,EAAQyE,QAC3BO,OAAOC,QAAQjD,EAAQkD,WAAWjC,KAAI,WAAeK,GAAf,uBAAE9C,EAAF,KAAOpI,EAAP,YAAyBoL,EAAqBhD,EAAKpI,EAAOkL,SAQnGpM,EAAkC,SAACiO,GAAD,gBAAsCxI,OAAtC,0BAA8EwI,EAAYvN,KAA1F,UAGlCoM,EAAuB,SAACoB,GAC5B,GAAKA,EACL,OAAOC,SAASD,EAASE,UAAU,GAAI,KAGnClB,EAAW,SAAC9I,GAEd,IACIiK,EAAUjK,EAAMhE,KAEpB,MAAwB,kBAAbiO,EAEFA,GAMNjK,EAAMkK,SAQNlK,EAAMmK,YAgBF,K,MClTX,SAASC,IAA2Q,OAA9PA,EAAWV,OAAOW,QAAU,SAAUC,GAAU,IAAK,IAAInK,EAAI,EAAGA,EAAIoK,UAAUtJ,OAAQd,IAAK,CAAE,IAAIqK,EAASD,UAAUpK,GAAI,IAAK,IAAI+E,KAAOsF,EAAcd,OAAOe,UAAUC,eAAeC,KAAKH,EAAQtF,KAAQoF,EAAOpF,GAAOsF,EAAOtF,IAAY,OAAOoF,IAA2BM,MAAMpH,KAAM+G,WAEhT,SAASM,EAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEtF,EAAK/E,EAAnEmK,EAEzF,SAAuCE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DtF,EAAK/E,EAA5DmK,EAAS,GAAQS,EAAarB,OAAOsB,KAAKR,GAAqB,IAAKrK,EAAI,EAAGA,EAAI4K,EAAW9J,OAAQd,IAAO+E,EAAM6F,EAAW5K,GAAQ2K,EAAS7C,QAAQ/C,IAAQ,IAAaoF,EAAOpF,GAAOsF,EAAOtF,IAAQ,OAAOoF,EAFxMW,CAA8BT,EAAQM,GAAuB,GAAIpB,OAAOwB,sBAAuB,CAAE,IAAIC,EAAmBzB,OAAOwB,sBAAsBV,GAAS,IAAKrK,EAAI,EAAGA,EAAIgL,EAAiBlK,OAAQd,IAAO+E,EAAMiG,EAAiBhL,GAAQ2K,EAAS7C,QAAQ/C,IAAQ,GAAkBwE,OAAOe,UAAUW,qBAAqBT,KAAKH,EAAQtF,KAAgBoF,EAAOpF,GAAOsF,EAAOtF,IAAU,OAAOoF,EAMne,IAAI,EAAqB,IAAMe,cAAc,OAAQ,KAAmB,IAAMA,cAAc,QAAS,KAAM,sHAEvGC,EAAqB,IAAMD,cAAc,QAAS,KAAM,QAExDE,EAAqB,IAAMF,cAAc,SAAU,CACrDzC,UAAW,IACX4C,GAAI,MACJC,GAAI,MACJC,EAAG,QAGDC,EAAqB,IAAMN,cAAc,OAAQ,CACnDzC,UAAW,IACXgD,EAAG,YACHC,UAAW,2BAGTC,EAAqB,IAAMT,cAAc,OAAQ,CACnDzC,UAAW,IACXgD,EAAG,YACHC,UAAW,2BAGTE,EAAqB,IAAMV,cAAc,OAAQ,CACnDzC,UAAW,IACXgD,EAAG,eACHC,UAAW,2BAGTG,EAAqB,IAAMX,cAAc,OAAQ,CACnDzC,UAAW,IACXqD,GAAI,MACJC,GAAI,KACJC,GAAI,MACJC,GAAI,QAGFC,EAAqB,IAAMhB,cAAc,OAAQ,CACnDzC,UAAW,IACXqD,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,QAGF,EAAW,SAAkBE,GAC/B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbpP,EAAQyN,EAAyByB,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMjB,cAAc,MAAOjB,EAAS,CACtD3E,MAAO,MACPC,OAAQ,MACR+G,QAAS,kBACTpP,IAAKkP,GACJnP,GAAQ,OAAiBR,IAAV4P,EAAsBlB,EAAQkB,EAAqB,IAAMnB,cAAc,QAAS,KAAMmB,GAAS,KAAMjB,EAAOI,EAAOG,EAAOC,EAAOC,EAAOK,IAGxJK,EAA0B,IAAMvP,YAAW,SAAUC,EAAOC,GAC9D,OAAoB,IAAMgO,cAAc,EAAUjB,EAAS,CACzDmC,OAAQlP,GACPD,OCWUuP,IDTA,IC5DM,SAACvP,GAAkB,IAC7BwP,EAAuCxP,EAAvCwP,iBAAkBC,EAAqBzP,EAArByP,kBAEnBC,EAAO,SAACC,GAEV,GAAIvP,OAAOkN,eAAe,WAAalN,OAAOwP,OAAOtC,eAAe,mBAAmB,CACnF,IAAIuC,EAAwBC,KAAKC,UAAUJ,GAG3CC,OAAOI,gBAAgBC,YAAYC,YAAYL,QAI/CzP,OAAO+P,OAAOD,YAAYP,EAAS,MA8C3C,OApCA7Q,qBAAU,WAcNsB,OAAOgQ,YAAc,SAACC,GAClBX,EAAK,CACD3H,KAAM,cACNnJ,KAAMyR,KAKdjQ,OAAOkQ,SAAW,KAGlBlQ,OAAOmQ,YAAc,WAEjB,OAAOnQ,OAAOkQ,UAElBlQ,OAAOoQ,iBAAiB,WAzBD,SAACC,GACfA,EAAI7R,KAAK0O,eAAe,YAI7BlN,OAAOkQ,SAAWG,EAAI7R,KACtB4Q,EAAiBiB,EAAI7R,UAmB0B,KACpD,CAAC4Q,KAMsB,IAAtBC,EACO,KAGP,yBAAKjE,UAAU,SACX,kBAAC,EAAD,CAAWvK,QA/CN,WACTyO,EAAK,CACD3H,KAAM,e,SCbH2I,I,MARG,SAAC1Q,GACf,OACI,yBAAKwL,UAAU,cAAf,UACQxL,EAAMsJ,QAAQqH,YADtB,aACsC3Q,EAAMsJ,QAAQsH,WAAW/M,OAAS7D,EAAMuJ,gBAAgB1F,OAD9F,QCqCOgN,I,MA9BK,SAAC7Q,GAAkB,IAC7B8Q,EAAoB9Q,EAApB8Q,QAASxH,EAAWtJ,EAAXsJ,QACXrJ,EAAM8D,iBAA0B,MAuBtC,OArBAjF,qBAAU,WAAO,IAAD,EAgBX,OAAHmB,QAAG,IAAHA,GAAA,UAAAA,EAAKmE,eAAL,SAAcoM,iBAAiB,QAfZ,WAAO,IAAD,IAEpB,OAAHvQ,QAAG,IAAHA,GAAA,UAAAA,EAAKmE,eAAL,mBAAc2M,qBAAd,SAA6Bb,YAAY5G,EAAQ1K,KAAM,QAaN,GACnDwB,OAAOoQ,iBAAiB,WAXF,SAACxP,GACrB,OAAQA,EAAMpC,KAAKmJ,MACjB,IAAK,cAEH,MACF,IAAK,OACC+I,GAAWA,QAK6B,KAEjD,CAACxH,EAAQ1K,KAAMkS,IAGd,4BAAQE,IAAK1H,EAAQ2H,IAAKhR,IAAKA,EAAKmP,MAAO9F,EAAQ2H,IAAKzF,UAAU,qB,MC5CxE,SAAS,KAA2Q,OAA9P,GAAWc,OAAOW,QAAU,SAAUC,GAAU,IAAK,IAAInK,EAAI,EAAGA,EAAIoK,UAAUtJ,OAAQd,IAAK,CAAE,IAAIqK,EAASD,UAAUpK,GAAI,IAAK,IAAI+E,KAAOsF,EAAcd,OAAOe,UAAUC,eAAeC,KAAKH,EAAQtF,KAAQoF,EAAOpF,GAAOsF,EAAOtF,IAAY,OAAOoF,IAA2BM,MAAMpH,KAAM+G,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEtF,EAAK/E,EAAnEmK,EAEzF,SAAuCE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DtF,EAAK/E,EAA5DmK,EAAS,GAAQS,EAAarB,OAAOsB,KAAKR,GAAqB,IAAKrK,EAAI,EAAGA,EAAI4K,EAAW9J,OAAQd,IAAO+E,EAAM6F,EAAW5K,GAAQ2K,EAAS7C,QAAQ/C,IAAQ,IAAaoF,EAAOpF,GAAOsF,EAAOtF,IAAQ,OAAOoF,EAFxM,CAA8BE,EAAQM,GAAuB,GAAIpB,OAAOwB,sBAAuB,CAAE,IAAIC,EAAmBzB,OAAOwB,sBAAsBV,GAAS,IAAKrK,EAAI,EAAGA,EAAIgL,EAAiBlK,OAAQd,IAAO+E,EAAMiG,EAAiBhL,GAAQ2K,EAAS7C,QAAQ/C,IAAQ,GAAkBwE,OAAOe,UAAUW,qBAAqBT,KAAKH,EAAQtF,KAAgBoF,EAAOpF,GAAOsF,EAAOtF,IAAU,OAAOoF,EAMne,IAAI,GAAqB,IAAMe,cAAc,QAAS,CACpDlG,KAAM,YACL,yDAEC,GAAqB,IAAMkG,cAAc,OAAQ,MAEjD,GAAqB,IAAMA,cAAc,IAAK,CAChD5K,GAAI,UACU,IAAM4K,cAAc,WAAY,CAC9C5K,GAAI,YACJmI,UAAW,MACX9D,OAAQ,6CAGN,GAAW,SAAkBwH,GAC/B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbpP,EAAQ,GAAyBkP,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMjB,cAAc,MAAO,GAAS,CACtD5K,GAAI,eACJrB,EAAG,MACHG,EAAG,MACHkG,MAAO,WACPC,OAAQ,WACR+G,QAAS,oBACT6B,MAAO,CACLC,iBAAkB,yBAEpBC,SAAU,WACVnR,IAAKkP,GACJnP,GAAQoP,EAAqB,IAAMnB,cAAc,QAAS,KAAMmB,GAAS,KAAM,GAAO,GAAO,KAG9F,GAA0B,IAAMrP,YAAW,SAAUC,EAAOC,GAC9D,OAAoB,IAAMgO,cAAc,GAAU,GAAS,CACzDkB,OAAQlP,GACPD,OCOUqR,IDLA,ICnCK,SAACrR,GAAkB,IAC5BwM,EAAaxM,EAAbwM,UACD8E,EAAiBhF,OAAOsB,KAAKpB,GAuBnC,OACI,yBAAKhB,UAAU,iBACX,4BACK8F,EAAe/G,KAAI,SAACgH,EAAc3G,GAAf,OAxBV,SAAC2G,EAAsB3G,GACzC,IAAMG,EAAWyB,EAAU+E,GAK3B,YAJmD/R,IAAjCQ,EAAMwR,gBAAgB5G,GAMhC,wBAAIY,UAAU,GAAGvK,QALL,aAK2B6G,IAAKyJ,GACvCxG,EAASqE,OAMlB,wBAAI5D,UAAU,YAAY1D,IAAKyJ,GAC3B,kBAAC,GAAD,CAAU/F,UAAU,UACnBT,EAASqE,OAOmCqC,CAAcF,EAAc3G,UC3BzF8G,KAAWC,aAAa1T,MACxBiG,IAAK0N,eAAeF,MAiFLG,OA9Ef,WAAgB,IAAD,EACqBpT,qBADrB,gCAEiBA,sBAFjB,mBAEN6K,EAFM,KAEGwI,EAFH,OAGiCrT,mBAAmB,IAHpD,mBAGN8K,EAHM,KAGWwI,EAHX,OAIetT,qBAJf,mBAINuT,EAJM,KAIEC,EAJF,KAKPT,EAA4B,GAM5BU,EAAyB,SAACtT,GAC9BkT,EAAWlT,EAAK0K,UA8ClB,OA3CAxK,qBAAU,WAER,IAAMqT,EAAUC,YAAW,WAErBhS,OAAOiS,YACTzJ,QAAQ0J,IAAI,sCAGZC,MAAM,GAAD,OAAItO,OAAJ,sBACFuO,MAAK,SAACC,GACLA,EAASC,OAAOF,MAAK,SAAC5T,GACpBsT,EAAuBtT,YAI9B,KACH,OAAO,WAAQ+T,aAAaR,MAC3B,IAEHrT,qBAAU,WACR,IAAIqT,EAMJ,OALA,OAAI7I,QAAJ,IAAIA,OAAJ,EAAIA,EAASsJ,SACPrJ,EAAgB1F,SAAWyF,EAAQsJ,OAAOhC,WAAW/M,SACvDsO,EAAUC,WAAWH,EAAW,IAAM3I,EAAQsJ,OAAOC,QAGlD,WAAQF,aAAaR,MAC3B,CAAC7I,EAASC,IAiBX,yBAAKiC,UAAU,OACb,kBAAC,GAAD,CAAcgE,iBAAkB0C,EAAwBzC,oBAAqBuC,IAE5E1I,GACC,kBAAC,EAAD,CACEA,QAASA,EACTE,iBArBqB,SAACsJ,IACgB,IAAxCvJ,EAAgBsB,QAAQiI,IAC1Bf,EAAmB,GAAD,mBAAKxI,GAAL,CAAsBuJ,MAoBpCvJ,gBAAiBA,EACjBiI,gBAAiBA,EACjBvG,gBAlBoB,SAACF,GAC3BnC,QAAQ0J,IAAIvH,OAoBF,OAAPzB,QAAO,IAAPA,OAAA,EAAAA,EAASsJ,SAAU,kBAAC,GAAD,CAAWtJ,QAASA,EAAQsJ,OAAQrJ,gBAAiBA,KACjE,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASkD,YAAa,kBAAC,GAAD,CAAaA,UAAWlD,EAAQkD,UAAWgF,gBAAiBA,IAClFQ,GAAU,kBAAC,GAAD,CAAa1I,QAAS0I,EAAQlB,QAlEzB,WAClBmB,OAAUzS,QCbMmM,QACW,cAA7BvL,OAAOyB,SAASkR,UAEe,UAA7B3S,OAAOyB,SAASkR,UAEhB3S,OAAOyB,SAASkR,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhB,MAAK,SAAAiB,GACJA,EAAaC,gBAEdC,OAAM,SAAAvU,GACLwJ,QAAQxJ,MAAMA,EAAMwU,c","file":"static/js/main.38781680.chunk.js","sourcesContent":["import { LoaderResource } from 'pixi.js';\nimport * as PIXI from 'pixi.js';\n\ninterface Location {\n    x: number;\n    y: number;\n}\n\nexport const lerpLocation = (point1: Location, point2: Location, alpha: number): Location => {\n    const x = lerp(point1.x, point2.x, alpha);\n    const y = lerp(point1.y, point2.y, alpha);\n    return { x, y };\n}\n\nconst lerp = (n1: number,  n2: number,  alpha: number) =>  {\n    return n1 + alpha * (n2 - n1);\n}\n\n// Uses the shared pixi loader to load a resource\nexport async function loadResourceAsync(path: string) { \n    const loader = PIXI.Loader.shared;\n    return new Promise<LoaderResource>((resolve, reject) => {\n        if (loader.resources[path]) {\n            resolve(loader.resources[path]);\n        }\n        else {\n            loader.add(path).load((_, resources) => {\n                resolve(resources[path]);\n            });\n        }\n    });\n}\n\nexport const loadResource = (path: string, callback: (resource: LoaderResource) => void) => { \n    const loader = PIXI.Loader.shared;\n    if (loader.resources[path]) {\n        callback(loader.resources[path]);\n        return;\n    }\n    loader.add(path).load((_, resources) => { callback(resources[path]!)});\n}","export interface TiledMapData {\n    width: number;\n    height: number;\n    tilewidth: number;\n    tileheight: number;\n    infinite: boolean;\n    backgroundcolor?: string;\n    orientation: Orientation;\n    renderorder: RenderOrder;\n    tilesets: TiledTilesetData[];\n    layers: TiledLayerData[];\n}\n\nexport interface TiledTilesetData {\n    columns: number;\n    firstgid: number;\n    source: string;\n    image: string;\n    imagewidth: number;\n    imageheight: number;\n    tilewidth: number;\n    tileheight: number;\n    tilecount: number;\n    name: string;\n    margin: number; // todo:\n    spacing: number; // todo\n    tiles?: TileData[];\n}\n\nexport interface TileData {\n    id: number,\n    image: string;\n    properties?: TiledProperty[];\n}\n\nexport interface TiledLayerData {\n    data: number[] | string;\n    objects: TiledObjectData[];\n    type: TiledLayerType;\n    height: number;\n    id: number;\n    name: string;\n    opacity: number; // not supported atm\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    properties?: TiledProperty[];\n    encoding?: 'base64';\n    compression?: '' | 'gzip' | 'zstd';\n}\n\nexport interface TiledObjectData {\n    gid?: number;\n    id: number;\n    name: string;\n    properties?: TiledProperty[];\n    polygon?: { x: number, y: number}[];\n    type: string;\n    visible: boolean;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n}\n\nexport enum TiledLayerType {\n    tilelayer = \"tilelayer\",\n    objectgroup = \"objectgroup\"\n}\n\nexport interface TiledProperty {\n    name: string,\n    type: string,\n    value: any\n}\n\nenum Orientation {\n    orthagonal = \"orthagonal\",\n    isometric = \"isometric\",\n    staggered = \"staggered\",\n    hexagonal = \"hexagonal\"\n}\n\nenum RenderOrder {\n    rightUp = \"right-up\",\n    rightDown = \"right-down\",\n    leftUp = \"left-up\",\n    leftDown = \"left-down\"\n}","import { useState, useEffect } from \"react\";\nimport { TiledTilesetData } from \"utils/tiledMapData\";\nimport { loadResource } from \"utils/pixiJs\";\nimport { LoaderResource } from \"pixi.js\";\n\nconst useTilesetsLoader = (determineTilesetSpritesheetPath: (tileset: TiledTilesetData) => string) => {\n    const [tilesetsTextures, setTilesets] = useState<{[key: string]: LoaderResource}>({});\n    const [data, setData] = useState<TiledTilesetData[]>();\n\n    const loadTilesets = (value: TiledTilesetData[]) => {\n        setData(value);\n    };\n\n    useEffect(() => {\n        if (!data) return;\n        //console.log('loading tilesets', data)\n        const nextTileset = nextTilesetToload(data, tilesetsTextures);\n        if (!nextTileset) return;\n\n        const tilesetName = nextTileset.name;\n        const path = determineTilesetSpritesheetPath(nextTileset);\n        loadResource(`${path}`, (resource) => {\n            if (resource.error) {\n                throw new Error(`Loading ${path}\\n${resource.error}`);\n            }\n            const newTilesets = { \n                ...tilesetsTextures,\n                [tilesetName]: resource\n            }\n            setTilesets(newTilesets);\n        });\n    }, [data, determineTilesetSpritesheetPath, tilesetsTextures]);\n    \n    const loadComplete = !!data && nextTilesetToload(data, tilesetsTextures) === undefined;\n\n    return {\n        loadComplete,\n        loadTilesets,\n        tilesetsTextures\n    }\n}\n\nexport default useTilesetsLoader;\n\n// Returns a TiledTilesetData that has not been loaded into tilesetsTextures yet\nconst nextTilesetToload = (tilesets: TiledTilesetData[], tilesetsTextures: {[key: string]: LoaderResource}) => {\n    return tilesets.find((t) => {\n        return !tilesetsTextures[t.name];\n    })\n}","import React, { forwardRef } from \"react\";\nimport { Viewport as PixiViewport, ClickEventData } from \"pixi-viewport\";\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\n\ninterface Props {\n  onClick?(event: ClickEventData): void;\n  screenWidth: number,\n  screenHeight: number,\n  worldWidth: number,\n  worldHeight: number,\n  minScale?: number;\n  maxScale?: number;\n}\n\n/** Viewport leverages pixi-viewport to create a pannable map\n * https://davidfig.github.io/pixi-viewport/jsdoc/\n */\nconst Viewport = forwardRef<PixiViewport, any>((props, ref) => {\n  const app = useApp();\n  window.PIXI = PIXI;\n\n  return <PixiComponentViewport app={app} {...props} ref={ref} />;\n})\n\ninterface PixiComponentProps {\n    app: PIXI.Application;\n}\n\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\n  create: (props: PixiComponentProps & Props) => {\n    const viewport = new PixiViewport({\n      screenWidth: props.screenWidth,\n      screenHeight: props.screenHeight,\n      worldWidth: props.worldWidth,\n      worldHeight: props.worldHeight,\n      ticker: props.app.ticker,\n      //interaction: props.app.renderer.plugins.interaction,\n      // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport.on(\"clicked\", (event) => { if(props.onClick) props.onClick(event) });\n\n    const {\n      minScale = .3,\n      maxScale = 1\n    } = props;\n\n    viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .clamp({ direction: 'all' })\n      .setZoom(.4)\n      .clampZoom({ minScale, maxScale })\n      .decelerate();\n\n    return viewport;\n  }\n});\nexport default Viewport;\n","import * as PIXI from 'pixi.js';\nimport { TILE_WIDTH, TILE_HEIGHT, MARGIN_TOP } from \"constants/tiles\";\n\nexport const tileLocationToPosition = (location: [number, number], horizontalTiles: number, verticalTiles: number) => {\n  const x = getOriginX(horizontalTiles, verticalTiles) + (TILE_WIDTH / 2) * location[0] + (TILE_WIDTH / 2) * -location[1];\n  const y = (location[0] + location[1]) * TILE_HEIGHT / 2 + (TILE_HEIGHT) + MARGIN_TOP;\n  return new PIXI.Point(x, y);\n}\n\nexport const getOriginX = (horizontalTiles: number, verticalTiles: number) => {\n  return (verticalTiles - horizontalTiles) * (TILE_HEIGHT / 2) + ((verticalTiles + horizontalTiles) * TILE_WIDTH / 2) / 2;\n}","export const TILE_WIDTH = 128;\nexport const TILE_HEIGHT = 64;\nexport const MARGIN_TOP = 128;   // extra top margin around the map\n","import { PixiComponent } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport { TiledLayerData, TiledTilesetData } from \"utils/tiledMapData\";\nimport { tileLocationToPosition } from \"utils/isometric\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"constants/tiles\";\nwindow.PIXI = PIXI;\nrequire('pixi-tilemap');\n\ninterface Props  {\n  texture: PIXI.Texture;\n  verticalTiles: number;\n  horizontalTiles: number;\n  layer: TiledLayerData;\n  tileset: TiledTilesetData;\n  spritesheet: PIXI.Spritesheet;\n};\n\n// Floortile layer leverages pixi-tilemap for better performance\nconst FloorTileLayer = PixiComponent<Props, any>(\"FloorTileLayer\", {\n  create(props: Props) {\n\n    // @ts-ignore\n    const tileLayer = new window.PIXI.tilemap.CompositeRectTileLayer(0, [props.texture]);\n    return tileLayer;\n  },\n\n  applyProps(instance, oldProps: Props, props: Props) {\n    const {layer, tileset, verticalTiles, horizontalTiles, spritesheet } = props;\n    if (!layer.data) {\n      return;\n    }\n    for (let i = 0; i < layer.data.length; i++) {\n      if (layer.data[i] > 0) {\n        const location: [number, number] = [i % horizontalTiles, Math.floor(i / horizontalTiles)];\n        const position = tileLocationToPosition(location, horizontalTiles, verticalTiles);\n\n        // @ts-ignore\n        const tile = tileset.tiles!.find((t) => t.id === layer.data[i] - tileset.firstgid);\n        const tileName = tile?.image.substr(tile?.image.lastIndexOf('/') + 1);\n        \n        instance.addFrame(spritesheet.textures[tileName!], \n          position.x - TILE_WIDTH / 2, \n          position.y - TILE_HEIGHT);\n      }\n    }\n  }\n});\n\nexport default FloorTileLayer;\n\n","import React, { useRef, useEffect, useState, ComponentProps } from 'react';\nimport { Sprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { gsap } from 'gsap'\n\n\nconst CAN_DRAG = false;\ninterface Props {\n    position?: PIXI.Point;\n    delay?: number; // Wait this long before showing\n    bounce?: boolean;\n}\n\n/* A map marker (the red or green arrow thimg) */\nconst Marker = (props: Props & ComponentProps<typeof Sprite>) => {\n    const ref = useRef<PIXI.Sprite>(null);\n    const data = useRef<PIXI.InteractionData>();\n    const [position, setPosition] = useState<PIXI.Point>(props.position || new PIXI.Point());\n    const popInDuration = 1;\n    const image = props.bounce ? `${process.env.PUBLIC_URL}/images/ui/marker.svg` :  `${process.env.PUBLIC_URL}/images/ui/marker-green.svg`;\n\n    useEffect(() => {\n        // Pop in animation!\n        gsap.from(ref.current, { \n          duration: popInDuration,\n          ease: \"elastic.out(2, 0.5)\",\n          pixi: { \n            visible: false,\n            scale: .1, \n          }\n        }).delay(props.delay || 0);\n    }, [props.delay]);\n\n    useEffect(() => {\n        let bounceAnim: gsap.core.Tween;\n        // Bounce animation!\n        if (props.bounce !== false) {\n            bounceAnim = gsap.to(ref.current, { \n                duration: .5,\n                yoyo: true,\n                repeat: -1,\n                pixi: { \n                  //@ts-ignore\n                    y: '-=40', \n                }\n              }).delay(popInDuration + Math.random());      \n        }\n        return () => {\n            bounceAnim?.kill();\n        }\n    }, [props.bounce]);\n\n    const onDragStart = (event: PIXI.InteractionEvent) => {\n        if (!CAN_DRAG) return;\n        // store a reference to the data\n        // the reason for this is because of multitouch\n        // we want to track the movement of this particular touch\n        data.current = event.data;\n        event.stopPropagation(); // Stop dragging the map!\n    }\n    \n    const onDragEnd = () => {\n        data.current = undefined;\n    }\n    \n    const onDragMove = () => {\n        if (!CAN_DRAG) return;\n        if (data.current)\n        {\n            const newPosition = data.current.getLocalPosition(ref.current!.parent);\n            setPosition(newPosition);\n        }\n    }\n    \n    return (\n        <Sprite \n            { ...props }\n            anchor={[0.5, 0.5]}\n            position={position}\n            ref={ref}\n            interactive={true}\n            image={image}\n            mousedown={onDragStart}\n            touchstart={onDragStart}\n            mouseup={onDragEnd}\n            mouseupoutside={onDragEnd}\n            mousemove={onDragMove}\n            touchmove={onDragMove}\n        />\n    );\n}\n\nexport default Marker;","import { TiledTilesetData } from \"./tiledMapData\";\n\n// finds tileset based on gid\nexport const findTileset = (gid: number, tilesets: TiledTilesetData[]) => {\n    let tileset;\n    for (let i = tilesets.length - 1; i >= 0; i--) {\n      tileset = tilesets[i];\n      if (tileset.firstgid <= gid) {\n        break;\n      }\n    }\n    return tileset;\n  }\n  ","import { PixiComponent, applyDefaultProps, Container } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport * as particles from 'pixi-particles';\n\ninterface Props  {\n    image: string;\n    config: particles.OldEmitterConfig | particles.EmitterConfig;\n};\n\nconst ParticleEmitter = PixiComponent<Props & React.ComponentProps<typeof Container>, PIXI.ParticleContainer>(\"ParticleEmitter\", {\n    create() {\n      return new PIXI.ParticleContainer();\n    },\n\n    applyProps(instance, oldProps: Props, newProps: Props) {\n      const { image, config, ...newP } = newProps;\n\n      // apply rest props to PIXI.ParticleContainer\n      applyDefaultProps(instance, oldProps, newP);\n\n      let emitter = (this as any)._emitter;\n      if (!emitter) {\n        emitter = new particles.Emitter(\n          instance,\n          [PIXI.Texture.from(image)],\n          config\n        );\n\n        let elapsed = performance.now();\n\n        const tick = () => {\n          emitter.raf = requestAnimationFrame(tick);\n          const now = performance.now();\n          // const amp = Math.random() * 5 + 15;\n          // const amp = 15;\n          // const freq = 0.0015;\n          // emitter.acceleration.x = (Math.sin((elapsed * freq)) * amp) + 15;\n\n          emitter.update((now - elapsed) * 0.0003);\n\n          elapsed = now;\n        };\n        emitter.emit = true;\n        // emitter.update(00.2);\n\n        tick();\n      }\n      (this as any)._emitter = emitter;\n    },\n\n    willUnmount() {\n      if ((this as any)._emitter) {\n        (this as any)._emitter.emit = false;\n        cancelAnimationFrame((this as any)._emitter.raf);\n      }\n    }\n});\n\nexport default ParticleEmitter;","import React from \"react\";\nimport smoke from './smoke.json';\nimport ParticleEmitter from 'components/pixi/ParticleEmitter';\nimport { TILE_WIDTH } from \"constants/tiles\";\nimport { Container } from \"@inlet/react-pixi\";\n\n\nconst Smoke1 = (props: React.ComponentProps<typeof Container> ) => {\n    const { x = 0, y = 0 } = props;\n    return (\n        <ParticleEmitter\n            name=\"smoke\"\n            x={x}\n            y={y}\n            image={`${process.env.PUBLIC_URL}/effects/smokeparticle.png`}\n            config={smoke}\n            pivot={[-TILE_WIDTH / 2, 0]}\n        />\n    )\n}\nexport default Smoke1;","import React, { useEffect, useRef } from 'react';\nimport { TiledObjectData, TiledProperty, TiledMapData } from 'utils/tiledMapData';\nimport { TILE_HEIGHT, TILE_WIDTH } from 'constants/tiles';\nimport { Sprite, Graphics } from '@inlet/react-pixi';\nimport { findTileset } from 'utils/tiles';\nimport { tileLocationToPosition } from 'utils/isometric';\nimport Smoke1 from './effects/smoke1';\nimport { gsap } from 'gsap'\n\n\ninterface Props {\n    data: TiledObjectData;\n    found?: boolean;\n    mapData: TiledMapData;\n    tilesetsTextures: {[key: string]: PIXI.LoaderResource};\n    onClick: (name:string) => void; \n}\n\nconst MapObject = (props: Props) => {\n  const o = props.data;\n  const {mapData, tilesetsTextures, found, onClick} = props;\n\n  const popInDuration = 1;\n  const checkRef = useRef(null);\n  useEffect(() => {\n    // Pop in animation!\n    if (!checkRef.current) return;\n    gsap.from(checkRef.current, { \n      duration: popInDuration,\n      ease: \"elastic.out(2, 0.5)\",\n      pixi: { \n        visible: false,\n        scale: .1, \n      }\n    });\n  }, [found]);\n\n  if (o.polygon) {\n    const {x, y } = o;\n    const location: [number, number] = [\n      x / TILE_HEIGHT,\n      y / TILE_HEIGHT\n    ];\n\n    const points = o.polygon.reduce((acc: number[], value: { x: number, y: number} ) => {\n      acc.push(value.y + value.x)\n      acc.push((value.y / 2) - (value.x / 2));\n      return acc;\n    }, []);\n\n    return (\n      <Graphics\n        key={`${o.type}${o.name}`}\n        draw={graphics => {\n          graphics.beginFill(0xBADA55);\n          graphics.drawPolygon(points);\n          graphics.endFill();\n        }}\n        position={tileLocationToPosition(location, mapData.width, mapData.height)}\n        pivot={[TILE_WIDTH / 2, TILE_HEIGHT /2]}\n      />\n    )\n  }\n  else if (o.gid) {\n    // todo: DRY\n    const {x, y, gid } = o;\n    const location: [number, number] = [\n      x / TILE_HEIGHT - 1,\n      y / TILE_HEIGHT - 1\n    ];\n    const actualGid = gid & 0x1FFFFFFF;\n    const tileset = findTileset(actualGid, mapData!.tilesets);\n    if (!tileset || !tileset.tiles || gid === 0) return null;\n      \n    // See https://discourse.mapeditor.org/t/data-field-in-the-tmx-format-json/3633\n    const flipHor = (gid & 0x80000000) !== 0;\n    const flipVert = (gid & 0x40000000) !== 0;\n    const scale: [number, number] = [1, 1];\n    if (flipHor) {\n      scale[0] *= -1;\n    }\n    if (flipVert) {\n      scale[1] *= -1;\n    }\n    const texture = tileset.tiles.find((t) => t.id === actualGid - tileset.firstgid);\n    if (!texture) return null;\n\n    // the image is in the format \"tiles/structure-wall/tile-structure-wall-gray-left.png\"\n    // the 'structure-wall' part refers to the spritesheet, the 'tile-structure-wall-gray-left' is the texture on the spriesheet\n    const [\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      _,\n      spritesheet,\n      textureName\n    ] = texture.image.split(\"/\");\n    if (!tilesetsTextures[spritesheet]) {\n      console.warn(`Could not find spritesheet ${spritesheet} ${tilesetsTextures}`);\n    };\n    if (!tilesetsTextures[spritesheet].textures![textureName]) {\n      console.warn(`Could not find texture ${spritesheet} ${textureName}`);\n    }\n\n    return (\n        <Sprite\n          name={`${o.name}: ${x},${y} (${textureName})`}\n          scale={scale}\n          texture={tilesetsTextures[spritesheet].textures![textureName]}\n          anchor={[0, 1]}\n          pivot={[TILE_WIDTH / 2, 0]}\n          position={tileLocationToPosition(location, mapData.width, mapData.height)}\n          pointerdown={() => onClick(o.name)}\n          interactive={!!o.name}\n        >\n          {renderEffects(o.properties)}\n          {found && <Sprite\n            ref={checkRef}\n            image={`${process.env.PUBLIC_URL}/images/ui/check.svg`}\n            scale={.8}\n            anchor={[-.1, 1]}\n            pivot={[TILE_WIDTH / 2, 0]}\n          />}\n        </Sprite> \n    );  \n  }\n  return null;\n}\n\nexport default MapObject;\n\nconst renderEffects = (properties?: TiledProperty[]) => {\n    if (!properties) return null;\n    let x, y;\n    const offset = properties.find(p => p.name === 'offset');\n    if (offset) {\n      [x, y] = offset.value.split(',');\n    }\n    \n    return (\n      <Smoke1 \n        x={x}\n        y={y}\n      />\n    )\n  }\n","import React, { useEffect, useState, useRef } from 'react';\nimport { loadResource } from 'utils/pixiJs';\nimport { Stage, Sprite, Container, Graphics } from '@inlet/react-pixi';\nimport { TiledMapData, TiledTilesetData, TiledLayerData, TiledLayerType, TiledObjectData, TiledProperty } from 'utils/tiledMapData';\nimport * as PIXI from 'pixi.js';\nimport useTilesetsLoader from 'hooks/useTilesetsLoader';\nimport Viewport from '../Viewport';\nimport { SCALE_MODES } from 'pixi.js';\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport { TILE_HEIGHT, TILE_WIDTH, MARGIN_TOP} from 'constants/tiles';\nimport { tileLocationToPosition } from 'utils/isometric';\nimport FloorTileLayer from 'components/pixi/FloorTileLayer';\nimport Marker from 'components/pixi/Marker';\nimport { Content, Scenario } from 'data/Content';\nimport { findTileset } from 'utils/tiles';\nimport MapObject from '../MapObject';\n\nconst screenWidth = window.innerWidth;\nconst screenHeight = window.innerHeight;\n\ninterface Props { \n  content: Content;\n  foundSituations: string[];\n  onSituationClick: (situation: string) => void;\n  solvedScenarios: string[];\n  onScenarioClick: (scenario: string) => void;\n}\n\n// // This stuff is needed for the pixi-js browser plugin\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  // tslint:disable-next-line: no-unused-expression\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI });\n}\n\nconst Map = (props: Props) => {\n  const { content, foundSituations, onSituationClick} = props;\n  const jsonPath = content.mapJson;\n  const [mapData, setMapData] = useState<TiledMapData>();\n  PIXI.settings.ROUND_PIXELS = true;\n\n  const {\n    loadComplete,\n    loadTilesets,\n    tilesetsTextures\n  } = useTilesetsLoader(determineTilesetSpritesheetPath);\n\n  useEffect(() => {\n    PIXI.settings.SCALE_MODE = SCALE_MODES.NEAREST; // prevent lines on the edges of tiles\n    loadResource(`${process.env.PUBLIC_URL}/${jsonPath}`, (resource) => {\n      setMapData(resource.data);\n    });\n  }, [jsonPath]);\n\n  useEffect(() => {\n    if (mapData) {\n      loadTilesets(mapData.tilesets);\n    }\n  }, [loadTilesets, mapData]);\n\n  // https://stackoverflow.com/questions/4615116/how-to-calculate-the-height-and-width-of-an-isometric-rectangle-square\n  const mapWidth = ((mapData?.width || 1) + (mapData?.height || 1)) * (TILE_WIDTH / 2);\n  const mapHeight = ((mapData?.width || 1) + (mapData?.height || 1)) * (TILE_HEIGHT / 2) + MARGIN_TOP;\n\n  const viewportRef = useRef<PixiViewport>(null);\n  useEffect(() => {\n    // focus on center of the map\n    if (viewportRef.current) {\n        const viewport = viewportRef.current;\n        viewport.moveCenter(mapWidth / 2, mapHeight / 2);\n    }\n  }, [mapData, mapHeight, mapWidth, tilesetsTextures]);\n\n\n  if (!loadComplete || !mapData) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  const renderFloor = (layer?: TiledLayerData) => {\n    if (!layer) {\n      console.warn(\"No layer with name 'floor' found!\");\n      return null;\n    }\n    const data = getTiles(layer);\n    const firstTileGid = data.find(Boolean);\n    if (!firstTileGid) {\n      console.warn(\"Layer with name 'floor' is empty?\");\n      return null;\n    }\n    const actualGid = firstTileGid & 0x1FFFFFFF;\n    const tileset = findTileset(actualGid, mapData!.tilesets);\n    if (!tileset) {\n      console.warn(\"No tileset found for floor layer. Huh?\");\n      return null;\n    }\n    const resource = tilesetsTextures[tileset.name];\n    PIXI.utils.clearTextureCache();\n\n    if (!resource.spritesheet) {\n      console.warn(`No texture loaded found for floor layer. Was looking for ${tileset.name}`);\n      return null;\n    }\n    return (\n      <FloorTileLayer \n        texture={(resource.spritesheet as any)._texture}\n        verticalTiles={mapData.height}\n        horizontalTiles={mapData.width}\n        layer={layer}\n        tileset={tileset}\n        spritesheet={resource.spritesheet}\n      />\n    )\n  }\n\n  const renderLayers = (layers: TiledLayerData[]) => {\n    return layers.filter(l => l.visible && l.name !== \"floor\" && l.type === TiledLayerType.tilelayer)\n      .map((layer: TiledLayerData, index: number) => {\n      const data = getTiles(layer);\n      return renderLayerTiles(data, layer, index)\n    });\n  } \n\n  const renderLayerTiles = (tileData: number[], layer: TiledLayerData, layerIndex: number) => {\n    return tileData.map((gid, i) => {\n      const actualGid = gid & 0x1FFFFFFF;\n      const tileset = findTileset(actualGid, mapData!.tilesets);\n      if (!tileset || !tileset.tiles || gid === 0) return null;\n\n      const columns = mapData!.width;\n      const x = (i % columns);\n      const y = Math.floor(i / columns);\n      // See https://discourse.mapeditor.org/t/data-field-in-the-tmx-format-json/3633\n      const flipHor = (gid & 0x80000000) !== 0;\n      const flipVert = (gid & 0x40000000) !== 0;\n      // const flipDiag = (gid & 0x20000000) !== 0;\n      const scale: [number, number] = [1, 1];\n      if (flipHor) {\n        scale[0] *= -1;\n      }\n      if (flipVert) {\n        scale[1] *= -1;\n      }\n      const texture = tileset.tiles.find((t) => t.id === actualGid - tileset.firstgid);\n      if (!texture) return null;\n\n      // the image is in the format \"tiles/structure-wall/tile-structure-wall-gray-left.png\"\n      // the 'structure-wall' part refers to the spritesheet, the 'tile-structure-wall-gray-left' is the texture on the spriesheet\n      const [\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        _,\n        spritesheet,\n        textureName\n      ] = texture.image.split(\"/\");\n      if (!tilesetsTextures[spritesheet]) {\n        console.warn(`Could not find spritesheet ${spritesheet} ${tilesetsTextures}`);\n      };\n      if (!tilesetsTextures[spritesheet].textures![textureName]) {\n        console.warn(`Could not find texture ${spritesheet} ${textureName}`);\n      }\n\n      return (\n        <Sprite\n          key={i}\n          name={`${layer.name}: ${x},${y} (${textureName})`}\n          scale={scale}\n          texture={tilesetsTextures[spritesheet].textures![textureName]}\n          anchor={[0, 1]}\n          pivot={[TILE_WIDTH / 2, 0]}\n          position={tileLocationToPosition([x, y], mapData.width, mapData.height)}\n          zIndex={i * 100 + layerIndex}\n        /> \n      );  \n    })\n  }\n\n  const renderObjectLayers = (layers: TiledLayerData[]) => {\n\n    return layers.filter(l => l.visible && l.type === TiledLayerType.objectgroup)\n      .map((layer: TiledLayerData) => {\n        return renderObjects(layer.objects);\n    });\n  } \n\n  const renderObjects = (objects: TiledObjectData[]) => {\n    return objects.map((o, index) => {\n      const found = foundSituations.indexOf(o.name) > -1;\n      return (\n        <MapObject\n          data={o}\n          key={`${o.type}${o.name}${index}`}\n          found={found}\n          tilesetsTextures={tilesetsTextures}\n          mapData={mapData}\n          onClick={onSituationClick}\n        />\n      )\n    })\n  }\n\n\n  const handleMarkerClick = (name: string, scenario: Scenario) => {\n    props.onScenarioClick(name);\n  }\n\n  const renderScenarioMarker = (name: string, scenario: Scenario, index: number) => {\n    const delay = index * 0.5;\n    const position = tileLocationToPosition(scenario.location as [number, number], mapData.width, mapData.height);\n    // const bounce = answers[index] === undefined;\n    const bounce = true;\n    return (\n      <Marker \n        position={position} \n        pointertap={() => handleMarkerClick(name, scenario)}\n        delay={delay}\n        bounce={bounce}\n        key={name}\n        name={name}\n      />\n    ); \n  }\n\n  const options = { \n    sharedLoader: true,\n    backgroundColor: parseBackgroundColor(mapData?.backgroundcolor)\n  }\n\n  return (\n    <Stage width={screenWidth} height={screenHeight} className=\"background\" options={options}>\n      <Viewport\n        worldWidth={mapWidth}\n        worldHeight={mapHeight}\n        screenWidth={screenWidth}\n        screenHeight={screenHeight}\n        ref={viewportRef}\n      >\n        {renderFloor(mapData.layers.find(l => l.name === \"floor\"))}\n        {/* <Graphics\n            name=\"selectioncircle\"\n            draw={graphics => {\n                const line = 3;\n                graphics.lineStyle(line, 0xFFFFFF);\n                graphics.drawCircle(0, 0, 5);\n                graphics.endFill();\n            }}\n            position={tileLocationToPosition([0, 0], mapData.width, mapData.height)}\n\n        /> */}\n        <Container sortableChildren={true}>\n          {renderLayers(mapData.layers)}\n        </Container>\n        {renderObjectLayers(mapData.layers)}\n        {Object.entries(content.scenarios).map(([key, value], index) => renderScenarioMarker(key, value, index))}\n      </Viewport>\n    </Stage>\n  );\n}\n\nexport default Map;\n// returns the path to the spritesheet for given tileset\nconst determineTilesetSpritesheetPath = (tilesetData: TiledTilesetData) => `${process.env.PUBLIC_URL}/maps/tilesets/${tilesetData.name}.json`;\n\n\nconst parseBackgroundColor = (asString: string | undefined) : number | undefined => {\n  if (!asString) { return; }\n  return parseInt(asString.substring(1), 16); // strip the hash, conver to int\n}\n\nconst getTiles = (layer: TiledLayerData): number[] => {\n\n    let data = null;\n    let rawData = layer.data;\n\n    if (typeof(rawData) !== 'string') {\n      // return new Uint8Array(rawData);\n      return rawData;\n    }\n\n    // ==================================\n    // == If applicable, decode Base64 ==\n    // ==================================\n    if(layer.encoding === 'base64') {\n        // data = base64.decode(rawData);\n        // data = base64.decode(\"dGVzdA==\");\n    }\n\n    // ============================================\n    // == If applicable, extract compressed data ==\n    // ============================================\n    if(layer.compression === 'gzip') {\n    //    data = zlib.gunzipSync(data);\n    }\n\n    // ====================================\n    // == Read buffer data every 4 bytes ==\n    // ====================================\n\n    // Each 32-bit integer is placed in an 8-bit integer array.\n    // There will never be a tile ID greater than 255, so only 1 byte is required.\n    // let array = new Uint8Array(layer.width * layer.height);\n    // for(let i=0, index=0; i<data.length; i += 4, index++) {\n    //     array[index] = data.readUInt32LE(i);\n    //     index++;\n    // }\n    // return array;\n    return [];\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".a{fill:#fff;}.a,.b{stroke:#283583;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.75px;}.b{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"Back\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"a\",\n  cx: 15.02,\n  cy: 15.02,\n  r: 14.65\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"b\",\n  d: \"M11.64,16\",\n  transform: \"translate(-0.97 -0.93)\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"b\",\n  d: \"M11.63,16\",\n  transform: \"translate(-0.97 -0.93)\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"b\",\n  d: \"M20.38,22.88\",\n  transform: \"translate(-0.97 -0.93)\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"line\", {\n  className: \"b\",\n  x1: 19.39,\n  y1: 8.16,\n  x2: 10.65,\n  y2: 15.02\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"line\", {\n  className: \"b\",\n  x1: 19.39,\n  y1: 21.98,\n  x2: 10.65,\n  y2: 15.11\n});\n\nvar SvgClose = function SvgClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30.04,\n    height: 30.04,\n    viewBox: \"0 0 30.04 30.04\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close.7ec0d58f.svg\";\nexport { ForwardRef as ReactComponent };","import React, {  useEffect } from 'react';\nimport './style/styles.css';\nimport { ReactComponent as CloseIcon } from './style/close.svg';\n\ninterface Props {\n    disableBackButton?: boolean;\n    gameDataReceived: (gameData: any) => void;\n}\n\n// start w  REACT_APP_PLAYER_MODE=true npm start\n\nconst PlayerBridge = (props: Props) => {   \n    const {gameDataReceived, disableBackButton} = props;\n\n    const send = (payload: any) => {\n        // @ts-ignore\n        if (window.hasOwnProperty(\"webkit\") && window.webkit.hasOwnProperty(\"messageHandlers\")){\n            var stringifiedMessageObj = JSON.stringify(payload);\n            // Send to In App Browser context\n            // @ts-ignore\n            webkit.messageHandlers.cordova_iab.postMessage(stringifiedMessageObj);\n        }\n        else {\n            // @ts-ignore\n            window.parent.postMessage(payload, '*');\n        }\n    }\n\n    const exit = () => {       \n        send({\n            type: 'exit'\n        });\n    }\n\n    useEffect(() => {\n        if (!process.env.REACT_APP_PLAYER_MODE) {\n            return;\n        }\n        const receiveMessage = (msg: any) => {\n            if (!msg.data.hasOwnProperty('userId')){\n                return;\n            }\n            // @ts-ignore\n            window.GAMEDATA = msg.data;\n            gameDataReceived(msg.data);\n        }\n\n        // @ts-ignore\n        window.setGameData = (gameData) => {\n            send({\n                type: 'setGameData',\n                data: gameData\n            });\n        }\n       \n        // @ts-ignore\n        window.GAMEDATA = null; \n        \n        // @ts-ignore\n        window.getGameData = () => {\n            // @ts-ignore\n            return window.GAMEDATA;\n        }   \n        window.addEventListener(\"message\", receiveMessage, false);\n    }, [gameDataReceived]);\n\n    if (!process.env.REACT_APP_PLAYER_MODE) {\n        return null;\n    }\n\n    if (disableBackButton === true) {\n        return null;\n    }\n    return (\n        <div className=\"close\">\n            <CloseIcon onClick={exit} />\n        </div>\n    )\n}\n\nexport default PlayerBridge;","import React from 'react';\nimport './styles/finderBox.css';\nimport { FinderContent } from 'data/Content';\n\ninterface Props {\n    content: FinderContent;\n    foundSituations: string[];\n}\n\nconst FinderBox = (props: Props) => {\n    return (\n        <div className=\"finder-box\">\n            {`${props.content.instruction} (${props.content.situations.length - props.foundSituations.length})`} \n        </div>\n    )\n}\n\nexport default FinderBox;","import React, { useEffect, useRef } from 'react';\nimport ReactModal from 'react-modal';\nimport './styles/modal.css';\nimport { Situation, ContentConfig } from 'data/Content';\nimport { GameData } from 'components/playerBridge/GameData';\n\ninterface GameDataEvent {\n  data: {\n    type: 'exit' | 'setGameData',\n    data: GameData<any>;\n  };\n}\n\ninterface Props {\n  content: ContentConfig;\n  onClose?: () => void;\n}\n\nconst IFrameModal = (props: Props) => {\n  const { onClose, content} = props;\n  const ref = useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    const handleLoad = () => {\n      // Send gamedata to iframe. Iframe needs to pick this up and serve it to the game when needed\n      ref?.current?.contentWindow?.postMessage(content.data, '*');\n    };\n\n    const handleMessage = (event: GameDataEvent) => {\n      switch (event.data.type) {\n        case 'setGameData':\n          // The iframe is sending a GameData to be stored\n          break;\n        case 'exit':\n          if (onClose) { onClose(); }\n          break;\n      }\n    };\n    ref?.current?.addEventListener('load', handleLoad, true);\n    window.addEventListener('message', handleMessage, true);\n\n  }, [content.data, onClose]);\n\n  return (\n      <iframe src={content.url} ref={ref} title={content.url} className=\"iframe-content\"></iframe>\n  )\n}\n\nexport default IFrameModal;\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:none;stroke:#3FA548;stroke-width:32;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\"\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  id: \"checkmark\",\n  className: \"st0\",\n  points: \"11.33,88.97 88.95,166.87 244.67,11.32  \"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"m-check-mark\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"255.97px\",\n    height: \"189.51px\",\n    viewBox: \"0 0 255.97 189.51\",\n    style: {\n      enableBackground: \"new 0 0 255.97 189.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.81786b3c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './styles/scenariosBox.css';\nimport { Scenario } from 'data/Content';\nimport { ReactComponent as CheckSvg } from './styles/check.svg';\n\ninterface Props {\n    scenarios: { [key: string]: Scenario }\n    solvedScenarios: string[];\n    //setScenarioSelected: React.Dispatch<React.SetStateAction<number | null>>;\n\n}\n\nconst ScenarioBox = (props: Props) => {\n    const {scenarios} = props;\n    const scenariosNames = Object.keys(scenarios);\n\n    const renderContent = (scenarioName: string, index: number) => {\n        const scenario = scenarios[scenarioName];\n        const completed = props.solvedScenarios[index] === undefined;\n        const handleClick = () => {\n           // props.setSituationSelected(index);\n        }\n        if (completed) {\n            return (\n                <li className=\"\" onClick={handleClick} key={scenarioName}>\n                    {scenario.title}\n                </li>\n            )\n        }\n\n        return (\n            <li className=\"completed\" key={scenarioName}>\n                <CheckSvg className=\"check\" />\n                {scenario.title}\n            </li>\n        )\n    }\n    return (\n        <div className=\"scenarios-box\">\n            <ul>\n                {scenariosNames.map((scenarioName, index) => renderContent(scenarioName, index))}\n            </ul>\n        </div>\n    )\n\n    // return (\n    //     <div className=\"Scenario-box\">\n    //         {/* {`${props.content.instruction} (${props.content.situations.length - props.foundSituations.length})`}  */}\n    //     </div>\n    // )\n}\n\nexport default ScenarioBox;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Map from \"./components/pixi/Map\";\nimport Modal from 'components/Modal';\nimport PlayerBridge from 'components/playerBridge';\nimport { GameData } from 'components/playerBridge/GameData';\nimport { Content, Situation, ContentConfig } from 'data/Content';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport FinderBox from 'components/FinderBox';\nimport IFrameModal from 'components/IFrameModal';\nimport ScenarioBox from 'components/ScenariosBox';\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\n\nfunction App() {\n  const [situation, setSituation] = useState<Situation>();\n  const [content, setContent] = useState<Content>();\n  const [foundSituations, setFoundSituations] = useState<string[]>([]);\n  const [iframe, setIframe] = useState<ContentConfig>();\n  const solvedScenarios: string[] = [];\n\n  const handleClose = () => {\n    setIframe(undefined);\n  }\n\n  const handleGameDataReceived = (data: GameData<Content>) => {\n    setContent(data.content);\n  }\n\n  useEffect(() => {\n    // See if we are fed gamedata by 21ccplayer app, if not, go fetch it ourselves\n    const timeout = setTimeout(() => {\n      // @ts-ignore\n      if(!window.GAME_DATA || !process.env.REACT_APP_PLAYER_MODE) {\n        console.log(\"no bridge found, fetching fallback\")\n        // @ts-ignore\n  \n        fetch(`${process.env.PUBLIC_URL}/config/data.json`)\n          .then((response) => {\n            response.json().then((data) => {\n              handleGameDataReceived(data);\n            })\n          })\n      }\n    }, 300); // todo: maybe a less hacky way\n    return () => { clearTimeout(timeout)};\n  }, []);\n   \n  useEffect(() => {\n    let timeout: number;\n    if (content?.finder) {\n      if (foundSituations.length === content.finder.situations.length) {\n        timeout = setTimeout(setIframe, 1000, content.finder.final);\n      }\n    }\n    return () => { clearTimeout(timeout);}\n  }, [content, foundSituations]);\n\n  const handleSituationClick = (situation: string) => {\n    if (foundSituations.indexOf(situation) === -1){\n      setFoundSituations([...foundSituations, situation]);\n    }\n  }\n\n  const handleScenarioClick = (scenario: string) => {\n    console.log(scenario)\n    // if (foundSituations.indexOf(situation) === -1){\n    //   setFoundSituations([...foundSituations, situation]);\n    // }\n  }\n\n\n  return (\n    <div className=\"App\" >\n      <PlayerBridge gameDataReceived={handleGameDataReceived} disableBackButton={!!iframe}/>\n      {/* {situation && <Modal onClose={handleClose} situation={situation}/>  } */}\n      {content && (\n        <Map \n          content={content} \n          onSituationClick={handleSituationClick} \n          foundSituations={foundSituations}\n          solvedScenarios={solvedScenarios}\n          onScenarioClick={handleScenarioClick}\n        />\n      )}\n      {content?.finder && <FinderBox content={content.finder} foundSituations={foundSituations} />}\n      {content?.scenarios && <ScenarioBox scenarios={content.scenarios} solvedScenarios={solvedScenarios} />}\n      {iframe && <IFrameModal content={iframe} onClose={handleClose} />}\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["utils/tiledMapData.ts","components/pixi/Viewport.tsx","utils/isometric.ts","constants/tiles.ts","components/pixi/FloorTileLayer.tsx","components/pixi/Marker.tsx","utils/tiles.ts","components/pixi/ParticleEmitter.ts","components/pixi/effects/smoke1/index.tsx","components/pixi/MapObject.tsx","components/pixi/Map/index.tsx","components/playerBridge/style/close.svg","components/playerBridge/index.tsx","components/FinderBox/index.tsx","components/IFrameModal/index.tsx","components/ScenariosBox/styles/check.svg","components/ScenariosBox/index.tsx","components/pixi/SituationScene.tsx","data/Content.ts","components/ScenarioScreen/index.tsx","components/playerBridge/Loading/index.tsx","components/dialogs/BaseDialog.tsx","common/images/star-empty.svg","components/dialogs/IntroDialog.tsx","utils/pixiJs.ts","App.tsx","hooks/useTilesetsLoader.ts","serviceWorker.ts","index.tsx"],"names":["TiledLayerType","Orientation","RenderOrder","Viewport","forwardRef","props","ref","app","useApp","window","PIXI","PixiComponentViewport","PixiComponent","create","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","on","event","onClick","minScale","maxScale","drag","pinch","wheel","clamp","direction","setZoom","clampZoom","decelerate","tileLocationToPosition","location","horizontalTiles","verticalTiles","x","getOriginX","TILE_WIDTH","y","require","FloorTileLayer","tilemap","CompositeRectTileLayer","texture","applyProps","instance","oldProps","layer","tileset","spritesheet","data","i","Math","floor","position","tile","tiles","find","t","id","firstgid","tileName","image","substr","lastIndexOf","addFrame","textures","length","Marker","useRef","useState","bounce","process","useEffect","gsap","from","current","duration","ease","pixi","visible","scale","delay","bounceAnim","to","yoyo","repeat","random","kill","onDragStart","onDragEnd","undefined","onDragMove","anchor","interactive","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","findTileset","gid","tilesets","ParticleEmitter","newProps","config","newP","applyDefaultProps","emitter","this","_emitter","particles","elapsed","performance","now","emit","tick","raf","requestAnimationFrame","update","willUnmount","cancelAnimationFrame","Smoke1","name","smoke","pivot","MapObject","o","mapData","tilesetsTextures","found","checkRef","animation","properties","p","steps","JSON","parse","value","parseFloat","tl","timeline","lastStep","currentStep","distance","sqrt","pow","width","height","Linear","easeNone","polygon","points","reduce","acc","push","key","type","draw","graphics","beginFill","drawPolygon","endFill","TILE_HEIGHT","actualGid","flipVert","split","textureName","console","warn","pointerdown","renderEffects","offset","effect","innerWidth","innerHeight","Map","content","foundSituations","onSituationClick","mapWidth","mapHeight","viewportRef","moveCenter","renderLayerTiles","tileData","layerIndex","map","columns","zIndex","renderObjects","objects","filter","index","indexOf","renderScenarioMarker","scenario","pointertap","onScenarioClick","handleMarkerClick","options","sharedLoader","backgroundColor","parseBackgroundColor","backgroundcolor","className","firstTileGid","getTiles","Boolean","resource","clearTextureCache","_texture","renderFloor","layers","l","sortableChildren","tilelayer","objectgroup","renderObjectLayers","Object","entries","scenarios","asString","parseInt","substring","rawData","encoding","compression","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref3","_ref4","cx","cy","r","_ref5","d","transform","_ref6","_ref7","_ref8","x1","y1","x2","y2","_ref9","_ref","svgRef","title","viewBox","ForwardRef","PlayerBridge","gameDataReceived","disableBackButton","send","payload","webkit","stringifiedMessageObj","stringify","messageHandlers","cordova_iab","postMessage","parent","interval","setInterval","GAMEDATA","clearInterval","setGameData","gameData","getGameData","addEventListener","msg","log","FinderBox","disabled","situations","instruction","onOpenGame","nextText","IFrameModal","onBack","onSetGameData","contentWindow","top","src","url","style","enableBackground","xmlSpace","ScenarioBox","scenariosNames","scenarioName","solvedScenarios","renderContent","Mode","SequenceItemType","SituationScene","sceneConfig","imageBaseUrl","otherProps","setScale","resize","removeEventListener","e","sceneElement","flipped","renderElement","registerPlugin","TextPlugin","ScenarioScreen","selectedAnswer","selectedOption","selectOption","reaction","useMemo","reactions","confirmed","setConfirmed","scene","setSceneConfig","balloonRef","balloonArrowRef","balloonTextRef","insetRef","nextButtonRef","sound","add","sequence","playSequence","useCallback","balloonText","inset","killTweensOf","removeAttribute","innerHTML","text","forEach","sequenceItem","onStart","visibility","speech","balloonArrowPos","right","positionArrow","caption","oldClass","newClass","autoAlpha","display","left","Sine","easeInOut","rect","getBoundingClientRect","offsetTop","handleSkipSequenceStep","currentIndex","currentLabel","isNaN","seek","handleYes","correct","play","setCorrectAnswer","handleNo","renderOption","option","element","otherOptions","querySelectorAll","opacity","parentTop","querySelector","childTop","abs","onComplete","setTimeout","handleOptionClick","currentTarget","onClose","description","confirmText","yesText","noText","Loading","BaseDialog","children","IntroDialog","headerText","descriptionText","starsToGainText","startText","GameState","loadResource","path","callback","loader","shared","resources","load","_","useTilesetsLoader","determineTilesetSpritesheetPath","setTilesets","setData","loadTilesets","nextTileset","nextTilesetToload","tilesetName","error","Error","newTilesets","loadComplete","PixiPlugin","registerPIXI","App","intro","state","setState","translations","setTranslations","setMapData","levelsCompleted","setLevelsCompleted","setScenario","setContent","setFoundSituations","iframe","setIframe","handleBack","handleSetGameData","handleGameDataReceived","settings","SCALE_MODE","SCALE_MODES","NEAREST","translation","jsonPath","mapJson","normal","situation","finder","final","tilesetData","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6e5aca1d.chunk.js","sourcesContent":["export interface TiledMapData {\n    width: number;\n    height: number;\n    tilewidth: number;\n    tileheight: number;\n    infinite: boolean;\n    backgroundcolor?: string;\n    orientation: Orientation;\n    renderorder: RenderOrder;\n    tilesets: TiledTilesetData[];\n    layers: TiledLayerData[];\n}\n\nexport interface TiledTilesetData {\n    columns: number;\n    firstgid: number;\n    source: string;\n    image: string;\n    imagewidth: number;\n    imageheight: number;\n    tilewidth: number;\n    tileheight: number;\n    tilecount: number;\n    name: string;\n    margin: number; // todo:\n    spacing: number; // todo\n    tiles?: TileData[];\n}\n\nexport interface TileData {\n    id: number,\n    image: string;\n    properties?: TiledProperty[];\n}\n\nexport interface TiledLayerData {\n    data: number[] | string;\n    objects: TiledObjectData[];\n    type: TiledLayerType;\n    height: number;\n    id: number;\n    name: string;\n    opacity: number; // not supported atm\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    properties?: TiledProperty[];\n    encoding?: 'base64';\n    compression?: '' | 'gzip' | 'zstd';\n}\n\nexport interface TiledObjectData {\n    gid?: number;\n    id: number;\n    name: string;\n    properties?: TiledProperty[];\n    polygon?: { x: number, y: number}[];\n    type: string;\n    visible: boolean;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n}\n\nexport enum TiledLayerType {\n    tilelayer = \"tilelayer\",\n    objectgroup = \"objectgroup\"\n}\n\nexport interface TiledProperty {\n    name: string,\n    type: string,\n    value: any\n}\n\nenum Orientation {\n    orthagonal = \"orthagonal\",\n    isometric = \"isometric\",\n    staggered = \"staggered\",\n    hexagonal = \"hexagonal\"\n}\n\nenum RenderOrder {\n    rightUp = \"right-up\",\n    rightDown = \"right-down\",\n    leftUp = \"left-up\",\n    leftDown = \"left-down\"\n}","import React, { forwardRef } from \"react\";\nimport { Viewport as PixiViewport, ClickEventData } from \"pixi-viewport\";\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\n\ninterface Props {\n  onClick?(event: ClickEventData): void;\n  screenWidth: number,\n  screenHeight: number,\n  worldWidth: number,\n  worldHeight: number,\n  minScale?: number;\n  maxScale?: number;\n}\n\n/** Viewport leverages pixi-viewport to create a pannable map\n * https://davidfig.github.io/pixi-viewport/jsdoc/\n */\nconst Viewport = forwardRef<PixiViewport, any>((props, ref) => {\n  const app = useApp();\n  window.PIXI = PIXI;\n\n  return <PixiComponentViewport app={app} {...props} ref={ref} />;\n})\n\ninterface PixiComponentProps {\n    app: PIXI.Application;\n}\n\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\n  create: (props: PixiComponentProps & Props) => {\n    const viewport = new PixiViewport({\n      screenWidth: props.screenWidth,\n      screenHeight: props.screenHeight,\n      worldWidth: props.worldWidth,\n      worldHeight: props.worldHeight,\n      ticker: props.app.ticker,\n      //interaction: props.app.renderer.plugins.interaction,\n      // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport.on(\"clicked\", (event) => { if(props.onClick) props.onClick(event) });\n\n    const {\n      minScale = .3,\n      maxScale = 1\n    } = props;\n\n    viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .clamp({ direction: 'all' })\n      .setZoom(.4)\n      .clampZoom({ minScale, maxScale })\n      .decelerate();\n\n    return viewport;\n  }\n});\nexport default Viewport;\n","import * as PIXI from 'pixi.js';\nimport { TILE_WIDTH, TILE_HEIGHT, MARGIN_TOP } from \"constants/tiles\";\n\nexport const tileLocationToPosition = (location: [number, number], horizontalTiles: number, verticalTiles: number) => {\n  const x = getOriginX(horizontalTiles, verticalTiles) + (TILE_WIDTH / 2) * location[0] + (TILE_WIDTH / 2) * -location[1];\n  const y = (location[0] + location[1]) * TILE_HEIGHT / 2 + (TILE_HEIGHT) + MARGIN_TOP;\n  return new PIXI.Point(x, y);\n}\n\nexport const getOriginX = (horizontalTiles: number, verticalTiles: number) => {\n  return (verticalTiles - horizontalTiles) * (TILE_HEIGHT / 2) + ((verticalTiles + horizontalTiles) * TILE_WIDTH / 2) / 2;\n}","export const TILE_WIDTH = 128;\nexport const TILE_HEIGHT = 64;\nexport const MARGIN_TOP = 128;   // extra top margin around the map\n","import { PixiComponent } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport { TiledLayerData, TiledTilesetData } from \"utils/tiledMapData\";\nimport { tileLocationToPosition } from \"utils/isometric\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"constants/tiles\";\nwindow.PIXI = PIXI;\nrequire('pixi-tilemap');\n\ninterface Props  {\n  texture: PIXI.Texture;\n  verticalTiles: number;\n  horizontalTiles: number;\n  layer: TiledLayerData;\n  tileset: TiledTilesetData;\n  spritesheet: PIXI.Spritesheet;\n};\n\n// Floortile layer leverages pixi-tilemap for better performance\nconst FloorTileLayer = PixiComponent<Props, any>(\"FloorTileLayer\", {\n  create(props: Props) {\n\n    // @ts-ignore\n    const tileLayer = new window.PIXI.tilemap.CompositeRectTileLayer(0, [props.texture]);\n    return tileLayer;\n  },\n\n  applyProps(instance, oldProps: Props, props: Props) {\n    const {layer, tileset, verticalTiles, horizontalTiles, spritesheet } = props;\n    if (!layer.data) {\n      return;\n    }\n    for (let i = 0; i < layer.data.length; i++) {\n      if (layer.data[i] > 0) {\n        const location: [number, number] = [i % horizontalTiles, Math.floor(i / horizontalTiles)];\n        const position = tileLocationToPosition(location, horizontalTiles, verticalTiles);\n\n        // @ts-ignore\n        const tile = tileset.tiles!.find((t) => t.id === layer.data[i] - tileset.firstgid);\n        const tileName = tile?.image.substr(tile?.image.lastIndexOf('/') + 1);\n        \n        instance.addFrame(spritesheet.textures[tileName!], \n          position.x - TILE_WIDTH / 2, \n          position.y - TILE_HEIGHT);\n      }\n    }\n  }\n});\n\nexport default FloorTileLayer;\n\n","import React, { useRef, useEffect, useState, ComponentProps } from 'react';\nimport { Sprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { gsap } from 'gsap'\n\n\nconst CAN_DRAG = false;\ninterface Props {\n    position?: PIXI.Point;\n    delay?: number; // Wait this long before showing\n    bounce?: boolean;\n}\n\n/* A map marker (the red or green arrow thimg) */\nconst Marker = (props: Props & ComponentProps<typeof Sprite>) => {\n    const ref = useRef<PIXI.Sprite>(null);\n    const data = useRef<PIXI.InteractionData>();\n    const [position, setPosition] = useState<PIXI.Point>(props.position || new PIXI.Point());\n    const popInDuration = 1;\n    const image = props.bounce ? `${process.env.PUBLIC_URL}/images/ui/marker.svg` :  `${process.env.PUBLIC_URL}/images/ui/marker-green.svg`;\n\n    useEffect(() => {\n        // Pop in animation!\n        gsap.from(ref.current, { \n          duration: popInDuration,\n          ease: \"elastic.out(2, 0.5)\",\n          pixi: { \n            visible: false,\n            scale: .1, \n          }\n        }).delay(props.delay || 0);\n    }, [props.delay]);\n\n    useEffect(() => {\n        let bounceAnim: gsap.core.Tween;\n        // Bounce animation!\n        if (props.bounce !== false) {\n            bounceAnim = gsap.to(ref.current, { \n                duration: .5,\n                yoyo: true,\n                repeat: -1,\n                pixi: { \n                  //@ts-ignore\n                    y: '-=40', \n                }\n              }).delay(popInDuration + Math.random());      \n        }\n        return () => {\n            bounceAnim?.kill();\n        }\n    }, [props.bounce]);\n\n    const onDragStart = (event: PIXI.InteractionEvent) => {\n        if (!CAN_DRAG) return;\n        // store a reference to the data\n        // the reason for this is because of multitouch\n        // we want to track the movement of this particular touch\n        data.current = event.data;\n        event.stopPropagation(); // Stop dragging the map!\n    }\n    \n    const onDragEnd = () => {\n        data.current = undefined;\n    }\n    \n    const onDragMove = () => {\n        if (!CAN_DRAG) return;\n        if (data.current)\n        {\n            const newPosition = data.current.getLocalPosition(ref.current!.parent);\n            setPosition(newPosition);\n        }\n    }\n    \n    return (\n        <Sprite \n            { ...props }\n            anchor={[0.5, 0.5]}\n            position={position}\n            ref={ref}\n            interactive={true}\n            image={image}\n            mousedown={onDragStart}\n            touchstart={onDragStart}\n            mouseup={onDragEnd}\n            mouseupoutside={onDragEnd}\n            mousemove={onDragMove}\n            touchmove={onDragMove}\n        />\n    );\n}\n\nexport default Marker;","import { TiledTilesetData } from \"./tiledMapData\";\n\n// finds tileset based on gid\nexport const findTileset = (gid: number, tilesets: TiledTilesetData[]) => {\n    let tileset;\n    for (let i = tilesets.length - 1; i >= 0; i--) {\n      tileset = tilesets[i];\n      if (tileset.firstgid <= gid) {\n        break;\n      }\n    }\n    return tileset;\n  }\n  ","import { PixiComponent, applyDefaultProps, Container } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport * as particles from 'pixi-particles';\n\ninterface Props  {\n    image: string;\n    config: particles.OldEmitterConfig | particles.EmitterConfig;\n};\n\nconst ParticleEmitter = PixiComponent<Props & React.ComponentProps<typeof Container>, PIXI.ParticleContainer>(\"ParticleEmitter\", {\n    create() {\n      return new PIXI.ParticleContainer();\n    },\n\n    applyProps(instance, oldProps: Props, newProps: Props) {\n      const { image, config, ...newP } = newProps;\n\n      // apply rest props to PIXI.ParticleContainer\n      applyDefaultProps(instance, oldProps, newP);\n\n      let emitter = (this as any)._emitter;\n      if (!emitter) {\n        emitter = new particles.Emitter(\n          instance,\n          [PIXI.Texture.from(image)],\n          config\n        );\n\n        let elapsed = performance.now();\n\n        const tick = () => {\n          emitter.raf = requestAnimationFrame(tick);\n          const now = performance.now();\n          // const amp = Math.random() * 5 + 15;\n          // const amp = 15;\n          // const freq = 0.0015;\n          // emitter.acceleration.x = (Math.sin((elapsed * freq)) * amp) + 15;\n\n          emitter.update((now - elapsed) * 0.0003);\n\n          elapsed = now;\n        };\n        emitter.emit = true;\n        // emitter.update(00.2);\n\n        tick();\n      }\n      (this as any)._emitter = emitter;\n    },\n\n    willUnmount() {\n      if ((this as any)._emitter) {\n        (this as any)._emitter.emit = false;\n        cancelAnimationFrame((this as any)._emitter.raf);\n      }\n    }\n});\n\nexport default ParticleEmitter;","import React from \"react\";\nimport smoke from './smoke.json';\nimport ParticleEmitter from 'components/pixi/ParticleEmitter';\nimport { TILE_WIDTH } from \"constants/tiles\";\nimport { Container } from \"@inlet/react-pixi\";\n\n\nconst Smoke1 = (props: React.ComponentProps<typeof Container> ) => {\n    const { x = 0, y = 0 } = props;\n    return (\n        <ParticleEmitter\n            name=\"smoke\"\n            x={x}\n            y={y}\n            image={`${process.env.PUBLIC_URL}/effects/smokeparticle.png`}\n            config={smoke}\n            pivot={[-TILE_WIDTH / 2, 0]}\n        />\n    )\n}\nexport default Smoke1;","import React, { useEffect, useRef } from 'react';\nimport { TiledObjectData, TiledProperty, TiledMapData } from 'utils/tiledMapData';\nimport { TILE_HEIGHT, TILE_WIDTH } from 'constants/tiles';\nimport { Sprite, Graphics } from '@inlet/react-pixi';\nimport { findTileset } from 'utils/tiles';\nimport { tileLocationToPosition } from 'utils/isometric';\nimport Smoke1 from './effects/smoke1';\nimport { gsap, Linear } from 'gsap'\n\n\ninterface Props {\n    data: TiledObjectData;\n    found?: boolean;\n    mapData: TiledMapData;\n    tilesetsTextures: {[key: string]: PIXI.LoaderResource};\n    onClick: (name:string) => void; \n}\n\nconst MapObject = (props: Props) => {\n  const o = props.data;\n  const {mapData, tilesetsTextures, found, onClick} = props;\n\n  const popInDuration = 1;\n  const checkRef = useRef(null);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    // Pop in animation!\n    if (!checkRef.current) return;\n    gsap.from(checkRef.current, { \n      duration: popInDuration,\n      ease: \"elastic.out(2, 0.5)\",\n      pixi: { \n        visible: false,\n        scale: .1, \n      }\n    });\n  }, [found]);\n\n  useEffect(() => {\n    if (!ref.current) return; \n\n    const animation = o.properties?.find(p => p.name === 'animation');\n    if (!animation) return;\n\n    // Pass a string like \"[[0, 22], [5, 22], [5,25], [11, 25], [11, 18]]\" with coordinates\n    const steps = JSON.parse(animation.value);\n    const delay = parseFloat(o.properties?.find(p => p.name === 'delay')?.value || 0);\n    const tl = gsap.timeline({\n      repeat: -1,\n      delay\n    });\n    for(let i = 1; i < steps.length; i++) {\n      const lastStep = steps[i - 1];\n      const currentStep = steps[i];\n      const distance = Math.sqrt(Math.pow(currentStep[0] - lastStep[0], 2) + Math.pow(currentStep[1] - lastStep[1], 2));\n\n      const position = tileLocationToPosition(currentStep, mapData.width, mapData.height);\n      const speed = 0.25;\n      tl.to(ref.current, {\n        duration: speed * distance,\n        pixi: { \n          x: position.x,\n          y: position.y,\n        },\n        ease: Linear.easeNone,\n      });\n    }\n  }, [mapData.height, mapData.width, o.properties]);\n\n  if (o.polygon) {\n    const {x, y } = o;\n    const location: [number, number] = [\n      x / TILE_HEIGHT,\n      y / TILE_HEIGHT\n    ];\n\n    const points = o.polygon.reduce((acc: number[], value: { x: number, y: number} ) => {\n      acc.push(value.y + value.x)\n      acc.push((value.y / 2) - (value.x / 2));\n      return acc;\n    }, []);\n\n    return (\n      <Graphics\n        key={`${o.type}${o.name}`}\n        draw={graphics => {\n          graphics.beginFill(0xBADA55);\n          graphics.drawPolygon(points);\n          graphics.endFill();\n        }}\n        position={tileLocationToPosition(location, mapData.width, mapData.height)}\n        pivot={[TILE_WIDTH / 2, TILE_HEIGHT /2]}\n      />\n    )\n  }\n  else if (o.gid) {\n    // todo: DRY\n    const {x, y, gid } = o;\n    const location: [number, number] = [\n      x / TILE_HEIGHT - 1,\n      y / TILE_HEIGHT - 1\n    ];\n    const actualGid = gid & 0x1FFFFFFF;\n    const tileset = findTileset(actualGid, mapData!.tilesets);\n    if (!tileset || !tileset.tiles || gid === 0) return null;\n      \n    // See https://discourse.mapeditor.org/t/data-field-in-the-tmx-format-json/3633\n    const flipHor = (gid & 0x80000000) !== 0;\n    const flipVert = (gid & 0x40000000) !== 0;\n    const scale: [number, number] = [1, 1];\n    if (flipHor) {\n      scale[0] *= -1;\n    }\n    if (flipVert) {\n      scale[1] *= -1;\n    }\n    const texture = tileset.tiles.find((t) => t.id === actualGid - tileset.firstgid);\n    if (!texture) return null;\n\n    // the image is in the format \"tiles/structure-wall/tile-structure-wall-gray-left.png\"\n    // the 'structure-wall' part refers to the spritesheet, the 'tile-structure-wall-gray-left' is the texture on the spriesheet\n    const [\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      _,\n      spritesheet,\n      textureName\n    ] = texture.image.split(\"/\");\n    if (!tilesetsTextures[spritesheet]) {\n      console.warn(`Could not find spritesheet ${spritesheet} ${tilesetsTextures}`);\n    };\n    if (!tilesetsTextures[spritesheet].textures![textureName]) {\n      console.warn(`Could not find texture ${spritesheet} ${textureName}`);\n    }\n\n    return (\n      <Sprite\n        name={`${o.name}: ${x},${y} (${textureName})`}\n        ref={ref}\n        scale={scale}\n        texture={tilesetsTextures[spritesheet].textures![textureName]}\n        anchor={[0, 1]}\n        pivot={[TILE_WIDTH / 2, 0]}\n        position={tileLocationToPosition(location, mapData.width, mapData.height)}\n        pointerdown={() => onClick(o.name)}\n        interactive={!!o.name}\n      >\n        {renderEffects(o.properties)}\n        {found && <Sprite\n          ref={checkRef}\n          image={`${process.env.PUBLIC_URL}/images/ui/check.svg`}\n          scale={.8}\n          anchor={[-.1, 1]}\n          pivot={[TILE_WIDTH / 2, 0]}\n        />}\n      </Sprite> \n    );  \n  }\n  return null;\n}\n\nexport default MapObject;\n\nconst renderEffects = (properties?: TiledProperty[]) => {\n    if (!properties) return null;\n\n\n    let x, y;\n    const offset = properties.find(p => p.name === 'offset');\n    if (offset) {\n      [x, y] = offset.value.split(',');\n    }\n    \n    const effect = properties.find(p => p.name === 'effect');\n    if (effect?.value === 'smoke1') {\n      return (\n        <Smoke1 \n          x={x}\n          y={y}\n        />\n      )\n    }\n    return null;\n  }\n","import React, { useEffect, useRef } from 'react';\nimport { Stage, Sprite, Container } from '@inlet/react-pixi';\nimport { TiledMapData, TiledLayerData, TiledLayerType, TiledObjectData } from 'utils/tiledMapData';\nimport * as PIXI from 'pixi.js';\nimport Viewport from '../Viewport';\nimport { SCALE_MODES, LoaderResource } from 'pixi.js';\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport { TILE_HEIGHT, TILE_WIDTH, MARGIN_TOP} from 'constants/tiles';\nimport { tileLocationToPosition } from 'utils/isometric';\nimport FloorTileLayer from 'components/pixi/FloorTileLayer';\nimport Marker from 'components/pixi/Marker';\nimport { Content, Scenario } from 'data/Content';\nimport { findTileset } from 'utils/tiles';\nimport MapObject from '../MapObject';\n\nconst screenWidth = window.innerWidth;\nconst screenHeight = window.innerHeight;\n\ninterface Props { \n  content: Content;\n  mapData: TiledMapData;\n  tilesetsTextures: {[key: string]: LoaderResource};\n  foundSituations: string[];\n  onSituationClick: (situation: string) => void;\n  solvedScenarios: string[];\n  onScenarioClick: (scenario: string) => void;\n}\n\n// // This stuff is needed for the pixi-js browser plugin\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  // tslint:disable-next-line: no-unused-expression\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI });\n}\n\nconst Map = (props: Props) => {\n  const { content, foundSituations, mapData, tilesetsTextures, onSituationClick } = props;\n\n\n  // PIXI.settings.ROUND_PIXELS = false;\n\n  // https://stackoverflow.com/questions/4615116/how-to-calculate-the-height-and-width-of-an-isometric-rectangle-square\n  const mapWidth = ((mapData?.width || 1) + (mapData?.height || 1)) * (TILE_WIDTH / 2);\n  const mapHeight = ((mapData?.width || 1) + (mapData?.height || 1)) * (TILE_HEIGHT / 2) + MARGIN_TOP;\n\n  const viewportRef = useRef<PixiViewport>(null);\n  useEffect(() => {\n    // focus on center of the map\n    if (viewportRef.current) {\n        const viewport = viewportRef.current;\n        viewport.moveCenter(mapWidth / 2, mapHeight / 2);\n    }\n  }, [mapData, mapHeight, mapWidth, tilesetsTextures]);\n\n\n  const renderFloor = (layer?: TiledLayerData) => {\n    if (!layer) {\n      console.warn(\"No layer with name 'floor' found!\");\n      return null;\n    }\n    const data = getTiles(layer);\n    const firstTileGid = data.find(Boolean);\n    if (!firstTileGid) {\n      console.warn(\"Layer with name 'floor' is empty?\");\n      return null;\n    }\n    const actualGid = firstTileGid & 0x1FFFFFFF;\n    const tileset = findTileset(actualGid, mapData!.tilesets);\n    if (!tileset) {\n      console.warn(\"No tileset found for floor layer. Huh?\");\n      return null;\n    }\n    const resource = tilesetsTextures[tileset.name];\n    PIXI.utils.clearTextureCache();\n\n    if (!resource.spritesheet) {\n      console.warn(`No texture loaded found for floor layer. Was looking for ${tileset.name}`);\n      return null;\n    }\n    return (\n      <FloorTileLayer \n        texture={(resource.spritesheet as any)._texture}\n        verticalTiles={mapData.height}\n        horizontalTiles={mapData.width}\n        layer={layer}\n        tileset={tileset}\n        spritesheet={resource.spritesheet}\n      />\n    )\n  }\n\n  const renderLayers = (layers: TiledLayerData[]) => {\n    return layers.filter(l => l.visible && l.name !== \"floor\" && l.type === TiledLayerType.tilelayer)\n      .map((layer: TiledLayerData, index: number) => {\n      const data = getTiles(layer);\n      return renderLayerTiles(data, layer, index)\n    });\n  } \n\n  const renderLayerTiles = (tileData: number[], layer: TiledLayerData, layerIndex: number) => {\n    return tileData.map((gid, i) => {\n      const actualGid = gid & 0x1FFFFFFF;\n      const tileset = findTileset(actualGid, mapData!.tilesets);\n      if (!tileset || !tileset.tiles || gid === 0) return null;\n\n      const columns = mapData!.width;\n      const x = (i % columns);\n      const y = Math.floor(i / columns);\n      // See https://discourse.mapeditor.org/t/data-field-in-the-tmx-format-json/3633\n      const flipHor = (gid & 0x80000000) !== 0;\n      const flipVert = (gid & 0x40000000) !== 0;\n      // const flipDiag = (gid & 0x20000000) !== 0;\n      const scale: [number, number] = [1, 1];\n      if (flipHor) {\n        scale[0] *= -1;\n      }\n      if (flipVert) {\n        scale[1] *= -1;\n      }\n      const texture = tileset.tiles.find((t) => t.id === actualGid - tileset.firstgid);\n      if (!texture) return null;\n\n      // the image is in the format \"tiles/structure-wall/tile-structure-wall-gray-left.png\"\n      // the 'structure-wall' part refers to the spritesheet, the 'tile-structure-wall-gray-left' is the texture on the spriesheet\n      const [\n        ,\n        spritesheet,\n        textureName\n      ] = texture.image.split(\"/\");\n      if (!tilesetsTextures[spritesheet]) {\n        console.warn(`Could not find spritesheet ${textureName} ${spritesheet} ${tilesetsTextures}`);\n      };\n      if (!tilesetsTextures[spritesheet].textures![textureName]) {\n        console.warn(`Could not find texture ${spritesheet} ${textureName}`);\n      }\n\n      return (\n        <Sprite\n          key={i}\n          name={`${layer.name}: ${x},${y} (${textureName})`}\n          scale={scale}\n          texture={tilesetsTextures[spritesheet].textures![textureName]}\n          anchor={[0, 1]}\n          pivot={[TILE_WIDTH / 2, 0]}\n          position={tileLocationToPosition([x, y], mapData.width, mapData.height)}\n          zIndex={i * 100 + layerIndex}\n        /> \n      );  \n    })\n  }\n\n  const renderObjectLayers = (layers: TiledLayerData[]) => {\n\n    return layers.filter(l => l.visible && l.type === TiledLayerType.objectgroup)\n      .map((layer: TiledLayerData) => {\n        return renderObjects(layer.objects);\n    });\n  } \n\n  const renderObjects = (objects: TiledObjectData[]) => {\n    return objects.filter(o => o.visible).map((o, index) => {\n      const found = foundSituations.indexOf(o.name) > -1;\n      return (\n        <MapObject\n          data={o}\n          key={`${o.type}${o.name}${index}`}\n          found={found}\n          tilesetsTextures={tilesetsTextures}\n          mapData={mapData}\n          onClick={onSituationClick}\n        />\n      )\n    })\n  }\n\n  const handleMarkerClick = (name: string) => {\n    props.onScenarioClick(name);\n  }\n\n  const renderScenarioMarker = (name: string, scenario: Scenario, index: number) => {\n    const delay = index * 0.5;\n    const position = tileLocationToPosition(scenario.location as [number, number], mapData.width, mapData.height);\n    // const bounce = answers[index] === undefined;\n    const bounce = true;\n    return (\n      <Marker \n        position={position} \n        pointertap={() => handleMarkerClick(name)}\n        delay={delay}\n        bounce={bounce}\n        key={name}\n        name={name}\n      />\n    ); \n  }\n\n  const options = { \n    sharedLoader: true,\n    backgroundColor: parseBackgroundColor(mapData?.backgroundcolor)\n  }\n\n  return (\n    <Stage width={screenWidth} height={screenHeight} className=\"background\" options={options}>\n      <Viewport\n        worldWidth={mapWidth}\n        worldHeight={mapHeight}\n        screenWidth={screenWidth}\n        screenHeight={screenHeight}\n        ref={viewportRef}\n      >\n        {renderFloor(mapData.layers.find(l => l.name === \"floor\"))}\n        {/* <Graphics\n            name=\"selectioncircle\"\n            draw={graphics => {\n                const line = 3;\n                graphics.lineStyle(line, 0xFFFFFF);\n                graphics.drawCircle(0, 0, 5);\n                graphics.endFill();\n            }}\n            position={tileLocationToPosition([0, 0], mapData.width, mapData.height)}\n\n        /> */}\n        <Container sortableChildren={true}>\n          {renderLayers(mapData.layers)}\n        </Container>\n        <Container sortableChildren={true}>\n          {renderObjectLayers(mapData.layers)}\n        </Container>\n        {Object.entries(content.scenarios || []).map(([key, value], index) => renderScenarioMarker(key, value, index))}\n      </Viewport>\n    </Stage>\n  );\n}\n\nexport default Map;\n\n\nconst parseBackgroundColor = (asString: string | undefined) : number | undefined => {\n  if (!asString) { return; }\n  return parseInt(asString.substring(1), 16); // strip the hash, conver to int\n}\n\nconst getTiles = (layer: TiledLayerData): number[] => {\n\n    let rawData = layer.data;\n\n    if (typeof(rawData) !== 'string') {\n      // return new Uint8Array(rawData);\n      return rawData;\n    }\n\n    // ==================================\n    // == If applicable, decode Base64 ==\n    // ==================================\n    if(layer.encoding === 'base64') {\n        // data = base64.decode(rawData);\n        // data = base64.decode(\"dGVzdA==\");\n    }\n\n    // ============================================\n    // == If applicable, extract compressed data ==\n    // ============================================\n    if(layer.compression === 'gzip') {\n    //    data = zlib.gunzipSync(data);\n    }\n\n    // ====================================\n    // == Read buffer data every 4 bytes ==\n    // ====================================\n\n    // Each 32-bit integer is placed in an 8-bit integer array.\n    // There will never be a tile ID greater than 255, so only 1 byte is required.\n    // let array = new Uint8Array(layer.width * layer.height);\n    // for(let i=0, index=0; i<data.length; i += 4, index++) {\n    //     array[index] = data.readUInt32LE(i);\n    //     index++;\n    // }\n    // return array;\n    return [];\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".a{fill:#fff;}.a,.b{stroke:#283583;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.75px;}.b{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"Back\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"a\",\n  cx: 15.02,\n  cy: 15.02,\n  r: 14.65\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"b\",\n  d: \"M11.64,16\",\n  transform: \"translate(-0.97 -0.93)\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"b\",\n  d: \"M11.63,16\",\n  transform: \"translate(-0.97 -0.93)\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"b\",\n  d: \"M20.38,22.88\",\n  transform: \"translate(-0.97 -0.93)\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"line\", {\n  className: \"b\",\n  x1: 19.39,\n  y1: 8.16,\n  x2: 10.65,\n  y2: 15.02\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"line\", {\n  className: \"b\",\n  x1: 19.39,\n  y1: 21.98,\n  x2: 10.65,\n  y2: 15.11\n});\n\nvar SvgClose = function SvgClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30.04,\n    height: 30.04,\n    viewBox: \"0 0 30.04 30.04\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close.7ec0d58f.svg\";\nexport { ForwardRef as ReactComponent };","import React, {  useEffect } from 'react';\nimport './style/styles.css';\nimport { ReactComponent as CloseIcon } from './style/close.svg';\n\ninterface Props {\n    disableBackButton?: boolean;\n    gameDataReceived: (gameData: any) => void;\n}\n\n// start w  REACT_APP_PLAYER_MODE=true npm start\n\nconst PlayerBridge = (props: Props) => {   \n    const {gameDataReceived, disableBackButton} = props;\n\n    const send = (payload: any) => {\n        // @ts-ignore\n        if (window.hasOwnProperty(\"webkit\") && window.webkit.hasOwnProperty(\"messageHandlers\")){\n            var stringifiedMessageObj = JSON.stringify(payload);\n            // Send to In App Browser context\n            // @ts-ignore\n            webkit.messageHandlers.cordova_iab.postMessage(stringifiedMessageObj);\n        }\n        else {\n            // @ts-ignore\n            window.parent.postMessage(payload, '*');\n        }\n    }\n\n    const back = () => {       \n        send({\n            type: 'back'\n        });\n    }\n\n    const exit = () => {      \n        console.log('exiitttt'); \n        send({\n            type: 'exit'\n        });\n    }\n\n    useEffect(() => {\n        if (!process.env.REACT_APP_PLAYER_MODE) {\n            return;\n        }\n        let interval: NodeJS.Timeout;\n        \n        const check = () => {\n            // @ts-ignore\n            // @ts-ignore\n            if (window.GAMEDATA) {\n                clearInterval(interval);\n                // @ts-ignore\n                // @ts-ignore\n                gameDataReceived(window.GAMEDATA);\n            }\n        }\n        // cordova iab just sets window.GAMEDATA\n        interval = setInterval(check, 250);\n\n        const receiveMessage = (msg: any) => {\n            clearInterval(interval);\n\n            if (!msg.data.hasOwnProperty('content')){\n                return;\n            }\n            // @ts-ignore\n            window.GAMEDATA = msg.data;\n            gameDataReceived(msg.data);\n        }\n\n        // @ts-ignore\n        window.setGameData = (gameData) => {\n            send({\n                type: 'setGameData',\n                data: gameData\n            });\n        }\n               \n        // @ts-ignore\n        window.getGameData = () => {\n            // @ts-ignore\n            return window.GAMEDATA;\n        }   \n        window.addEventListener(\"message\", receiveMessage, false);\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, [gameDataReceived]);\n\n    if (!process.env.REACT_APP_PLAYER_MODE) {\n        return null;\n    }\n\n    if (disableBackButton === true) {\n        return null;\n    }\n    return (\n        <div className=\"close\">\n            <CloseIcon onClick={exit} />\n        </div>\n    )\n}\n\nexport default PlayerBridge;","import React from 'react';\nimport './styles/finderBox.scss';\nimport { FinderContent } from 'data/Content';\n\ninterface Props {\n    content: FinderContent;\n    instruction: string;\n    foundSituations: string[];\n    nextText: string;\n    onOpenGame: () => void;\n}\n\nconst FinderBox = (props: Props) => {\n    const disabled = props.foundSituations.length < props.content.situations.length;\n    return (\n        <div className=\"finder-box\">\n            {`${props.instruction} (${props.foundSituations.length}/${props.content.situations.length})`} \n            <button className=\"green button\" disabled={disabled} onClick={props.onOpenGame}>                \n                {props.nextText}\n            </button>\n        </div>\n    )\n}\n\nexport default FinderBox;","import React, { useEffect, useRef } from 'react';\nimport './styles/modal.css';\nimport { ContentConfig } from 'data/Content';\nimport { GameData } from 'components/playerBridge/GameData';\n\ninterface GameDataEvent {\n  data: {\n    type: 'exit' | 'setGameData' | 'back',\n    data: GameData<any>;\n  };\n}\n\ninterface Props {\n  content: ContentConfig;\n  onBack?: () => void;\n  onSetGameData: (data: GameData<any>) => void\n}\n\nconst IFrameModal = (props: Props) => {\n  const { onBack, onSetGameData, content} = props;\n  const ref = useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    const handleLoad = () => {\n      // Send gamedata to iframe. Iframe needs to pick this up and serve it to the game when needed\n      ref?.current?.contentWindow?.postMessage(content.data, '*');\n    };\n\n    const handleMessage = (event: GameDataEvent) => {\n      switch (event.data.type) {\n        case 'setGameData':\n          // The iframe is sending a GameData to be stored\n          onSetGameData(event.data.data);\n          break;\n        case 'back':\n          if (onBack) { onBack(); }\n          break;\n        case 'exit':\n          send({\n            type: 'exit'\n          });\n          break;\n      }\n    };\n    ref?.current?.addEventListener('load', handleLoad, true);\n    window.addEventListener('message', handleMessage, true);\n\n  }, [content.data, onBack, onSetGameData]);\n\n  const send = (payload: any) => {\n    // @ts-ignore\n    if (window.hasOwnProperty(\"webkit\") && window.webkit.hasOwnProperty(\"messageHandlers\")){\n        var stringifiedMessageObj = JSON.stringify(payload);\n        // Send to In App Browser context\n        // @ts-ignore\n        webkit.messageHandlers.cordova_iab.postMessage(stringifiedMessageObj);\n    }\n    else {\n        // @ts-ignore\n        window.top.postMessage(payload, '*');\n    }\n  }\n\n  return (\n      <iframe src={content.url} ref={ref} title={content.url} className=\"iframe-content\"></iframe>\n  )\n}\n\nexport default IFrameModal;\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:none;stroke:#3FA548;stroke-width:32;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\"\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  id: \"checkmark\",\n  className: \"st0\",\n  points: \"11.33,88.97 88.95,166.87 244.67,11.32  \"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"m-check-mark\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"255.97px\",\n    height: \"189.51px\",\n    viewBox: \"0 0 255.97 189.51\",\n    style: {\n      enableBackground: \"new 0 0 255.97 189.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.81786b3c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './styles/scenariosBox.css';\nimport { Scenario } from 'data/Content';\nimport { ReactComponent as CheckSvg } from './styles/check.svg';\n\ninterface Props {\n    scenarios: { [key: string]: Scenario }\n    solvedScenarios: string[];\n    //setScenarioSelected: React.Dispatch<React.SetStateAction<number | null>>;\n\n}\n\nconst ScenarioBox = (props: Props) => {\n    const {scenarios} = props;\n    const scenariosNames = Object.keys(scenarios);\n\n    const renderContent = (scenarioName: string, index: number) => {\n        const scenario = scenarios[scenarioName];\n        const completed = props.solvedScenarios[index] === undefined;\n        const handleClick = () => {\n           // props.setSituationSelected(index);\n        }\n        if (completed) {\n            return (\n                <li className=\"\" onClick={handleClick} key={scenarioName}>\n                    {scenario.title}\n                </li>\n            )\n        }\n\n        return (\n            <li className=\"completed\" key={scenarioName}>\n                <CheckSvg className=\"check\" />\n                {scenario.title}\n            </li>\n        )\n    }\n    return (\n        <div className=\"scenarios-box\">\n            <ul>\n                {scenariosNames.map((scenarioName, index) => renderContent(scenarioName, index))}\n            </ul>\n        </div>\n    )\n\n    // return (\n    //     <div className=\"Scenario-box\">\n    //         {/* {`${props.content.instruction} (${props.content.situations.length - props.foundSituations.length})`}  */}\n    //     </div>\n    // )\n}\n\nexport default ScenarioBox;","import React, { ComponentProps, useEffect, useState } from 'react';\nimport { Sprite, Container, Stage } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { SceneElement } from 'data/Content';\n\ninterface Props {\n  imageBaseUrl: string;\n  sceneConfig: SceneElement[];\n}\n\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\n}\n\nconst DEFAULT_WIDTH = 1280;\nconst DEFAULT_HEIGHT = 720;\nconst SituationScene = (props: Props & ComponentProps<typeof Container>) => {\n  const {sceneConfig, imageBaseUrl, ...otherProps} = props;\n  const [scale, setScale] = useState(1);\n  const renderElement = (sceneElement: SceneElement) => {\n    const scale: [number, number] = [sceneElement.scale || 1, sceneElement.scale || 1];\n    if (sceneElement.flipped) scale[0] = -scale[0];\n    return (\n      <Sprite \n        image={`${imageBaseUrl}${sceneElement.image}`} \n        key={sceneElement.image} \n        position={sceneElement.position || [0, 0]}\n      />\n    )   \n  }\n\n  useEffect(() => {\n    const resize = () => {\n      if (window.innerWidth < DEFAULT_WIDTH || window.innerHeight < DEFAULT_HEIGHT) {\n        if (DEFAULT_WIDTH - window.innerWidth > DEFAULT_HEIGHT - window.innerHeight) {\n          // width defines height\n          setScale(window.innerWidth / DEFAULT_WIDTH);\n        } else {\n          // height defines width\n          setScale(window.innerHeight / DEFAULT_HEIGHT);\n        }\n      } else {\n        setScale(1);\n      }\n    }\n    window.addEventListener('resize', resize);\n    window.addEventListener('orientationchange', resize);\n    resize();\n    return () => {\n      window.removeEventListener('resize', resize);\n      window.removeEventListener('orientationchange', resize);\n    }\n  }, []);\n  \n  return (\n      <Stage width={DEFAULT_WIDTH * scale} height={DEFAULT_HEIGHT * scale} className=\"scene\" options={{backgroundColor: 0xffffff}}>\n        <Container {...otherProps} scale={scale} >\n         {sceneConfig.map(e => renderElement(e))}\n        </Container>\n      </Stage>\n  )\n}\n\nexport default SituationScene;","import { GameData } from \"components/playerBridge/GameData\";\n\nexport interface Content {\n  mapJson: string,\n  situations: { [key: string]: Situation }\n  scenarios: { [key: string]: Scenario }\n  finder?: FinderContent\n}\n\nexport enum Mode {\n  scenario = \"scenario\",\n  finder = \"finder\"\n}\n\nexport interface FinderContent {\n    situations: string[];\n    final: ContentConfig;\n}\n\nexport interface ContentConfig {\n  url: string\n  data: GameData<any>\n}\n\nexport interface Situation {\n  url: string;\n  title: string;\n  // todo: inner game config!?\n}\n\nexport interface Scenario {\n  location: number[];\n  title: string;\n  imageBaseUrl: string;\n  description: string;\n  sequence: SequenceItem[];\n  scene: SceneElement[];\n  situationSpeech: string;\n  options: string[];\n  reactions: ConflictReaction[];\n}\n\n// Something on the scene\nexport interface SceneElement {\n  image?: string;\n  position?: [number, number];\n  scale?: number;\n  flipped: boolean;\n}\n\nexport interface ConflictReaction { \n  correct: boolean, \n  text: string, \n  scene: SceneElement[]; \n  confirmText: string,\n  yesText: string;\n  noText: string;\n  confirmImage?: string \n}\n\nexport enum SequenceItemType {\n  caption = 'caption',\n  speech = 'speech',\n  image = 'image',  // image, no speech\n}\n\nexport interface SequenceItem {\n  type: SequenceItemType,\n  text: string,\n  balloonArrowPos?: number;\n  \n  scene?: SceneElement[]; // optional override\n}\n\n// Something\n\n// export interface ConflictContent {\n//   description: string;\n//   sequence: SequenceItem[];\n//   scene: SceneElement[];\n//   situationSpeech: string;\n//   options: string[];\n//   reactions: ConflictReaction[];\n// }\n\n// export interface SceneElement {\n//   image?: string;\n//   type?: SceneElementType;\n//   position?: [number, number];\n//   scale?: number;\n//   flipped: boolean;\n//   pose: AvatarPose;\n// }\n\n// export enum SceneElementType {\n//   sprite = \"sprite\",\n//   avatar = \"avatar\",\n// }\n\n// export enum AvatarPose {\n//   angle = \"angle\",\n//   front = \"front\",\n//   side = \"side\",\n//   angry = \"angry\"\n// }\n\n// export interface ConflictReaction { \n//   correct: boolean, \n//   text: string, \n//   scene: SceneElement[]; \n//   confirmText: string,\n//   yesText: string;\n//   noText: string;\n//   confirmImage?: string \n// }\n\n// export enum SequenceItemType {\n//   caption = 'caption',\n//   speech = 'speech',\n//   image = 'image',  // image, no speech\n// }\n\n// export interface SequenceItem {\n//   type: SequenceItemType,\n//   text: string,\n//   balloonArrowPos?: number;\n  \n//   scene?: SceneElement[]; // optional override\n// }","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { gsap, Linear, Sine } from 'gsap'\nimport { TextPlugin } from 'gsap/all';\nimport sound from 'pixi-sound';\nimport SituationScene from '../pixi/SituationScene';\nimport \"./styles/scenarioScreen.css\";\nimport { SceneElement, Scenario, SequenceItemType } from 'data/Content';\nimport { ReactComponent as CloseIcon } from '../playerBridge/style/close.svg';\n\ngsap.registerPlugin(TextPlugin);\nconst SPEED_MODIFIER = 1; // for debugging\n\ninterface Props {\n  content: Scenario;\n  setCorrectAnswer: (index: number) => void;\n  onClose: () => void;\n  selectedAnswer?: number; // When answer has been set correctly before\n}\n\nconst ScenarioScreen = (props: Props) => {\n  const {content, selectedAnswer = null} = props;\n  const {imageBaseUrl} = content;\n  const [selectedOption, selectOption] = useState<number | null>(selectedAnswer);\n  // Reaction based on current selection\n  const reaction = useMemo(() => {\n    if (selectedOption === null) return null;\n    return props.content.reactions[selectedOption];\n  }, [props.content.reactions, selectedOption]);\n  \n  const [confirmed, setConfirmed] = useState(selectedAnswer != null);\n  const [sceneConfig, setSceneConfig] = useState<SceneElement[]>(reaction?.scene || props.content.scene);\n  const balloonRef = useRef<HTMLDivElement>(null);\n  const balloonArrowRef = useRef<HTMLDivElement>(null);\n  const balloonTextRef = useRef<HTMLSpanElement>(null);\n  const insetRef = useRef<HTMLDivElement>(null);\n  const ref = useRef<HTMLDivElement>(null);\n  const nextButtonRef = useRef<HTMLButtonElement>(null);\n\n  const handleOptionClick = (element: HTMLLIElement, index: number) => {\n    element.className = \"animating\";\n    if (!ref.current) return;\n\n    // Fade out the non selected options\n    const otherOptions = ref.current!.querySelectorAll(\".options .normal\");\n    gsap.to(otherOptions, {\n      duration: 0.5,\n      opacity: 0,\n      ease: Linear.easeNone,\n    });\n\n    // Move current option to top\n    var parentTop = ref.current!.querySelector(\".options\")!.getBoundingClientRect().top; // Initial parent's top distance from the top of the viewport;\n    var childTop = element.getBoundingClientRect().top;\n    var distance = Math.abs(parentTop - childTop);\n\n    gsap.to(element, {\n      duration: 0.5,\n      top: -distance,\n      ease: Linear.easeNone,\n      onComplete: () => {\n        setTimeout(() => {\n          element.className = \"\";\n          selectOption(index);\n        }, 250);\n      }\n    });\n  };\n\n  useEffect(() => {\n    sound.add('correct', `${process.env.PUBLIC_URL}/sound/correct.mp3`);    \n    sound.add('wrong', `${process.env.PUBLIC_URL}/sound/wrong.mp3`);\n  }, []);\n\n  const sequence = useRef<gsap.core.Timeline>();\n  const playSequence = useCallback(() => {\n    const tl = gsap.timeline();\n    sequence.current = tl;\n    const balloonText = balloonTextRef!.current!;\n    const inset = insetRef.current!;\n    gsap.killTweensOf(balloonText);\n    gsap.killTweensOf(balloonRef.current);\n    gsap.killTweensOf(inset);\n\n    // Reset\n    if (nextButtonRef.current) nextButtonRef.current!.removeAttribute('style');\n    balloonRef.current!.removeAttribute('style');\n    balloonArrowRef.current!.removeAttribute('style');\n    inset.removeAttribute('style');\n\n    // Build timeline\n    balloonText.innerHTML = content.sequence[0].text;\n\n    // All the sequences\n    content.sequence.forEach((sequenceItem, index) => {\n\n      const onStart = () => {\n        if (balloonArrowRef.current) {\n          balloonArrowRef.current.style.visibility = sequenceItem.type === SequenceItemType.speech ? 'visible' : 'hidden';\n        }\n        if (sequenceItem.type !== SequenceItemType.image) {\n          if (balloonRef.current) {\n            balloonRef.current!.className = `balloon ${sequenceItem.type}`;\n          }\n          balloonText.innerHTML = sequenceItem.text;\n          \n          if (sequenceItem.balloonArrowPos && balloonArrowRef.current) {\n            balloonArrowRef.current!.style.right = `${sequenceItem.balloonArrowPos}%`;  \n          }\n          positionArrow();\n        }\n\n        if (sequenceItem.scene) {\n          setSceneConfig(sequenceItem.scene);\n        }\n      } \n\n      tl.add(`seq-${index}`);\n      switch (sequenceItem.type) {\n        case SequenceItemType.caption:\n          tl.to(balloonText, {\n            onStart,\n            duration: sequenceItem.text.length * 0.025 / SPEED_MODIFIER,\n            text: {\n              value: sequenceItem.text, \n              oldClass: \"hidden\",\n              newClass: \"visible\"\n            },\n            ease: Linear.easeNone,\n          });\n          tl.to(balloonText, { duration: 3});\n          break;\n        case SequenceItemType.speech:\n          tl.to(balloonText, {\n            onStart,\n            duration: sequenceItem.text.length * 0.045 / SPEED_MODIFIER,\n            ease: Linear.easeNone,\n          });\n          break;\n        case SequenceItemType.image:\n          tl.to(balloonRef.current, {\n            onStart,\n            duration: .25,\n            autoAlpha: 0,\n            ease: Linear.easeNone,\n          });\n          tl.to(balloonArrowRef.current, {\n            duration: .25,\n            autoAlpha: 0,\n            ease: Linear.easeNone,\n          }, \"-=.25\");\n          break;\n      }\n    });\n\n    tl.add(`seq-${content.sequence.length}`);\n\n    // Fade the balloon out\n    tl.to(balloonRef.current, {\n      delay: 1 / SPEED_MODIFIER,\n      duration: .5,\n      autoAlpha: 0,\n      ease: Linear.easeNone,\n    });\n\n    tl.add('end');\n    // Slide inset in\n    tl.to(inset, {\n      onStart: () => {\n        if (nextButtonRef.current) \n          nextButtonRef.current!.style.display = \"none\";\n\n        if (balloonArrowRef.current)\n          balloonArrowRef.current.style.visibility = 'hidden';\n      },\n      duration: .5,\n      left: 0,\n      ease: Sine.easeInOut,\n    }, \"-=1\");\n  }, [content.sequence]);\n\n  const positionArrow = () => {\n    if (!balloonRef.current || !balloonArrowRef.current) return;\n    const rect = balloonRef.current.getBoundingClientRect();\n    balloonArrowRef.current.style.top = `${balloonRef.current.offsetTop + rect.height}px`;\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', positionArrow);\n    return () => {\n      window.removeEventListener('resize', positionArrow);\n    }\n  }, []);\n\n  const handleSkipSequenceStep = () => {\n    if (!sequence.current) return;\n    const currentIndex = parseInt(sequence.current.currentLabel().substring('seq-'.length));\n    if (isNaN(currentIndex)) return;\n    // @ts-ignore\n    sequence.current.seek(`seq-${currentIndex+1}`, false);\n  }\n\n  useEffect(() => {\n    if (selectedAnswer) {\n      insetRef.current!.style.left = '0px';\n      balloonRef.current!.style.visibility = 'hidden';\n    }\n    else {\n      playSequence();\n    }\n  }, [content.sequence, playSequence, selectedAnswer]);\n\n  const handleReplay = () => {\n    setSceneConfig(props.content.scene);\n    selectOption(null);\n    setConfirmed(false);\n    playSequence();\n  }\n\n  const handleYes = () => {\n    setConfirmed(true);\n    setSceneConfig(reaction!.scene);\n\n    if (reaction!.correct) {\n      sound.play('correct');\n      props.setCorrectAnswer(selectedOption!);\n    } else {\n      sound.play('wrong');\n    }\n  }\n\n  const handleNo = () => {\n    if (!sequence.current) return;\n    setSceneConfig(props.content.scene);\n    selectOption(null);\n    setConfirmed(false);\n    // @ts-ignore\n    sequence.current.seek('end', false);\n  }\n\n  const renderReaction = () => {\n    if (!reaction) {\n      return null;\n    }\n    if (!confirmed) {\n      return (\n        <>\n          <p>{reaction.confirmText}</p>\n          <p className=\"yesno\">\n            <button onClick={handleYes}>yes</button>\n            <span className=\"motivation\">{reaction.yesText}</span>\n          </p>\n          <p className=\"yesno\">\n            <button onClick={handleNo}>no</button>\n            <span className=\"motivation\">{reaction.noText}</span>\n          </p>\n        </>\n      )\n    }\n    return (\n      <>\n        { reaction?.correct && (<p className=\"right-option\">You’ve chosen the right option!</p>)}\n        {reaction.text.split(\"\\n\").map(p => <p key={p.substring(0, 10)}>{p}</p>)}\n        { (!reaction?.correct) && (\n         <button onClick={handleNo} className=\"button-replay\">\n           try again\n         </button>\n        )}     \n      </>\n    )\n  }\n\n  const renderOption = (option: string, index: number) => {\n    if (selectedOption === null) {\n      // Nothing selected, render all\n      return (\n        <li key={option} className=\"normal\" onClick={(e) => handleOptionClick(e.currentTarget, index)} >\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n    if (selectedOption === index) {\n      // Render only selected option\n      let className = 'selected';\n      if (confirmed) {\n        className = reaction?.correct ? \"correct\" : \"wrong\";\n      }\n\n      return (\n        <li key={option} className={className} >\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n  }\n\n  const exit = () => {\n    props.onClose();\n  }\n\n  return (\n    <div className=\"scenario-screen\" ref={ref}>\n      <div className=\"content\">\n        <div className=\"title\">\n          <div className=\"close\">\n              <CloseIcon onClick={exit} />\n          </div>\n          {content.title}\n        </div>\n        <div className=\"situation\" onClick={handleSkipSequenceStep}>\n          { props.content.scene && (\n            <SituationScene \n              sceneConfig={sceneConfig} \n              imageBaseUrl={imageBaseUrl}\n            />\n          )}\n          <div className=\"inset\" ref={insetRef} >\n            <p>\n              {content.description}\n            </p>\n            <ul className=\"options\">\n              {content.options.map((option, index) => renderOption(option, index))}\n            </ul>\n            { renderReaction() }\n          </div> \n          <div className={`balloon`} ref={balloonRef}>\n            <span ref={balloonTextRef}></span>\n          </div>\n          <div className=\"balloon-arrow\" ref={balloonArrowRef} style={{visibility: 'hidden'}}/>\n        </div>\n        { !selectedOption && (\n          <div className=\"controls-bottomright\">\n            <button className=\"button-replay\" onClick={handleReplay}>\n              replay\n            </button>\n            <button className=\"button-next\" ref={nextButtonRef} onClick={handleSkipSequenceStep}>\n              {\">\"}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ScenarioScreen;","import React from 'react';\nimport './styles/loading.css';\n\nconst Loading = () => {\n    return (\n        <div className=\"loading-background\">\n            <div className=\"white-block\">\n                <div className=\"outset\"></div>\n                <div className=\"blue-block\"></div>\n            </div>\n            <div className=\"subtext\">\n                Stay curious\n            </div>\n        </div>\n    )\n}\n\nexport default Loading;\n","import React, { PropsWithChildren } from 'react';\nimport './styles/baseDialog.scss';\n\ninterface Props {\n  className: string;\n}\n\nconst BaseDialog = (props: PropsWithChildren<any>) => {\n  return (\n    <div className={`basedialog ${props.className}`}>\n        {props.children}\n    </div>\n  );\n}\n\nexport default BaseDialog;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\n            .star-empty {\\n                fill: #f8f8f8;\\n                stroke: #b0b0b0;\\n                stroke-width: 3px;\\n            }\\n        \"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"star-empty\",\n  d: \"M67.517,0l21.1,42.2,46.418,6.752L101.275,81.864l7.6,46.418L67.517,106.339,26.163,128.282l7.6-46.418L0,48.95,46.418,42.2Z\",\n  transform: \"translate(3.223 3.354)\"\n});\n\nvar SvgStarEmpty = function SvgStarEmpty(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 141.478,\n    height: 134.378,\n    viewBox: \"0 0 141.478 134.378\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgStarEmpty, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/star-empty.88e9156a.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport BaseDialog from './BaseDialog';\nimport { ReactComponent as StarEmpty } from './../../common/images/star-empty.svg';\nimport './styles/introDialog.scss';\n\ninterface Props {\n  headerText: string;\n  descriptionText: string;\n  starsToGainText: string;\n  startText: string;\n  onStart: () => void;\n}\n\nconst IntroDialog = (props: Props) => {\n  return (\n    <BaseDialog className=\"intro-dialog\">\n      <div className=\"top\">\n        <h1>{props.headerText}</h1>\n      </div>\n      <div className=\"center\">\n        <section>{props.descriptionText}</section>\n      </div>  \n      <div className=\"bottom\">\n        <StarEmpty className=\"star\"/>\n        <span className=\"stars-to-gain\">\n          {props.starsToGainText}\n        </span>\n        <button className=\"green button start\" onClick={props.onStart}>\n          {props.startText}\n        </button>\n      </div>\n    </BaseDialog>\n  );\n}\n\nexport default IntroDialog;","import { LoaderResource } from 'pixi.js';\nimport * as PIXI from 'pixi.js';\n\ninterface Location {\n    x: number;\n    y: number;\n}\n\nexport const lerpLocation = (point1: Location, point2: Location, alpha: number): Location => {\n    const x = lerp(point1.x, point2.x, alpha);\n    const y = lerp(point1.y, point2.y, alpha);\n    return { x, y };\n}\n\nconst lerp = (n1: number,  n2: number,  alpha: number) =>  {\n    return n1 + alpha * (n2 - n1);\n}\n\n// Uses the shared pixi loader to load a resource\nexport async function loadResourceAsync(path: string) { \n    const loader = PIXI.Loader.shared;\n    return new Promise<LoaderResource>((resolve, reject) => {\n        if (loader.resources[path]) {\n            resolve(loader.resources[path]);\n        }\n        else {\n            loader.add(path).load((_, resources) => {\n                resolve(resources[path]);\n            });\n        }\n    });\n}\n\nexport const loadResource = (path: string, callback: (resource: LoaderResource) => void) => { \n    const loader = PIXI.Loader.shared;\n    if (loader.resources[path]) {\n        callback(loader.resources[path]);\n        return;\n    }\n    loader.add(path).load((_, resources) => { callback(resources[path]!)});\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport Map from \"./components/pixi/Map\";\nimport PlayerBridge from 'components/playerBridge';\nimport { GameData, Level } from 'components/playerBridge/GameData';\nimport { Content, ContentConfig, Scenario } from 'data/Content';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport FinderBox from 'components/FinderBox';\nimport IFrameModal from 'components/IFrameModal';\nimport ScenarioBox from 'components/ScenariosBox';\nimport ScenarioScreen from 'components/ScenarioScreen';\nimport Loading from 'components/playerBridge/Loading';\nimport IntroDialog from 'components/dialogs/IntroDialog';\nimport useTilesetsLoader from 'hooks/useTilesetsLoader';\nimport { TiledTilesetData, TiledMapData } from 'utils/tiledMapData';\nimport { loadResource } from 'utils/pixiJs';\nimport './styles/common.scss'\nimport { SCALE_MODES } from 'pixi.js';\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\n\nenum GameState {\n  intro = 0,\n  normal = 1 << 1,\n  wrong = 1 << 2,\n  correct = 1 << 3,\n  complete = 1 << 4\n}\n\nfunction App() {\n  const [state, setState] = useState(GameState.intro);\n  const [translations, setTranslations] = useState<{[key: string]: string}>({});\n  const [mapData, setMapData] = useState<TiledMapData>();\n  const [levelsCompleted, setLevelsCompleted] = useState<Level[]>();\n\n  const [scenario, setScenario] = useState<Scenario>();\n  const [content, setContent] = useState<Content>();\n  const [foundSituations, setFoundSituations] = useState<string[]>([]);\n  const [iframe, setIframe] = useState<ContentConfig>();\n  const solvedScenarios: string[] = [];\n\n  const handleBack = useCallback(() => {\n    setIframe(undefined);\n  }, []);\n\n  const handleSetGameData = useCallback((data: GameData<any>) => {\n    // @ts-ignore\n    window.setGameData(data);\n  }, []);\n\n  const handleGameDataReceived = useCallback((data: GameData<Content>) => {\n    PIXI.settings.SCALE_MODE = SCALE_MODES.NEAREST; // prevent lines on the edges of tiles\n\n    setLevelsCompleted(data.levelsCompleted);    \n    setContent(data.content);\n    \n    if (data.translations){\n      const t = data.translations.reduce<{[key: string]: string}>((acc, translation) => {\n        acc[translation.key] = translation.value;\n        return acc;\n      }, {});\n      setTranslations(t);\n    }\n\n    // console.log(data.translations.map(t => `${t.key}`).join('\\n'))\n    // console.log(data.translations.map(t => t.value).join('\\n'))\n  }, []);\n\n  const {\n    loadComplete,\n    loadTilesets,\n    tilesetsTextures\n  } = useTilesetsLoader(determineTilesetSpritesheetPath);\n  \n  useEffect(() => {\n    if (!content) return;\n\n    // Content loaded, load map json\n    const jsonPath = content.mapJson;\n    loadResource(`${process.env.PUBLIC_URL}/${jsonPath}`, (resource) => {\n      setMapData(resource.data);\n    });    \n  }, [content]);\n\n  useEffect(() => {\n    if (!mapData) return;\n\n    loadTilesets(mapData.tilesets);    \n  }, [loadTilesets, mapData]);\n\n  useEffect(() => {\n    // @ts-ignore\n\n    // See if we are fed gamedata by 21ccplayer app, if not, go fetch it ourselves\n    if (!process.env.REACT_APP_PLAYER_MODE) {\n      // @ts-ignore\n      if(!content) {\n        console.log(\"no bridge found, fetching fallback\")\n        // @ts-ignore\n        \n        // fetch(`${process.env.PUBLIC_URL}/config/data-fireextinguishers.json`)\n        // fetch(`${process.env.PUBLIC_URL}/config/data-emergencyexits.json`)\n        // fetch(`${process.env.PUBLIC_URL}/config/data-aeds.json`)\n        fetch(`${process.env.PUBLIC_URL}/config/data-dangeroussituations.json`)\n        .then((response) => {\n          response.json().then((data) => {\n            handleGameDataReceived(data);\n          })\n        })\n      }\n    };\n  }, [content, handleGameDataReceived]);\n  \n  const handleOpenGame = () => {\n    if (!levelsCompleted) return;\n    // Copy the levelsCompleted of VCA game into minigame\n    const final: ContentConfig = {\n      ...content?.finder?.final!,\n      data: {\n        ...content?.finder?.final.data!,\n        levelsCompleted\n      }\n    }\n    setIframe(final);\n  }\n\n  const handleStart = () => {   \n    setState(GameState.normal);\n  }\n  \n  const handleSituationClick = (situation: string) => {\n    if (!content?.finder) return;\n\n    if (content.finder.situations.indexOf(situation) > -1 && foundSituations.indexOf(situation) === -1){\n      setFoundSituations([...foundSituations, situation]);\n    }\n  }\n  \n  const handleScenarioClick = (scenario: string) => {\n    setScenario(content?.scenarios[scenario]);\n  }\n    \n  const exitScenario = () => {\n    setScenario(undefined);\n  }\n\n  return (\n    <>\n      {(!loadComplete) && (          \n        <Loading />\n      )}\n      <div className=\"background\" >\n        <PlayerBridge \n          gameDataReceived={handleGameDataReceived}\n          disableBackButton={!!iframe || !!scenario}\n\n        />\n        {loadComplete && (\n          <>\n            {(state === GameState.intro) &&\n            (<IntroDialog\n              onStart={handleStart}\n              headerText={translations[\"intro-header\"]}\n              descriptionText={translations[\"intro-description\"]}\n              starsToGainText={translations[\"intro-stars-to-gain\"]}\n              startText={translations[\"intro-start\"]}\n            />)}\n            {(state === GameState.normal) && mapData && content && (\n              <>\n                <Map \n                  content={content}\n                  mapData={mapData}\n                  tilesetsTextures={tilesetsTextures}\n                  onSituationClick={handleSituationClick} \n                  foundSituations={foundSituations}\n                  solvedScenarios={solvedScenarios}\n                  onScenarioClick={handleScenarioClick}\n                />\n                {content?.finder && (\n                  <FinderBox \n                    content={content.finder} \n                    instruction={translations[\"finder-instruction\"]}\n                    foundSituations={foundSituations} \n                    onOpenGame={handleOpenGame}\n                    nextText={translations[\"button-next\"]}\n                  />\n                )}\n                {content?.scenarios && <ScenarioBox scenarios={content.scenarios} solvedScenarios={solvedScenarios} />}\n              </>\n            )}\n            {iframe && (\n              <IFrameModal \n                content={iframe} \n                onBack={handleBack} \n                onSetGameData={handleSetGameData} \n              />\n            )}\n            {scenario && (\n              <ScenarioScreen \n                content={scenario}\n                setCorrectAnswer={() => {}}\n                onClose={exitScenario}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// returns the path to the spritesheet for given tileset\nconst determineTilesetSpritesheetPath = (tilesetData: TiledTilesetData) => `${process.env.PUBLIC_URL}/maps/tilesets/${tilesetData.name}.json`;\n\n\n","import { useState, useEffect, useCallback } from \"react\";\nimport { TiledTilesetData } from \"utils/tiledMapData\";\nimport { loadResource } from \"utils/pixiJs\";\nimport { LoaderResource } from \"pixi.js\";\n\nconst useTilesetsLoader = (determineTilesetSpritesheetPath: (tileset: TiledTilesetData) => string) => {\n    const [tilesetsTextures, setTilesets] = useState<{[key: string]: LoaderResource}>({});\n    const [data, setData] = useState<TiledTilesetData[]>();\n\n    const loadTilesets = useCallback((value: TiledTilesetData[]) => {\n        setData(value);\n    }, []);\n\n    useEffect(() => {\n        if (!data) return;\n        //console.log('loading tilesets', data)\n        const nextTileset = nextTilesetToload(data, tilesetsTextures);\n        if (!nextTileset) return;\n\n        const tilesetName = nextTileset.name;\n        const path = determineTilesetSpritesheetPath(nextTileset);\n        loadResource(`${path}`, (resource) => {\n            if (resource.error) {\n                throw new Error(`Loading ${path}\\n${resource.error}`);\n            }\n            const newTilesets = { \n                ...tilesetsTextures,\n                [tilesetName]: resource\n            }\n            setTilesets(newTilesets);\n        });\n    }, [data, determineTilesetSpritesheetPath, tilesetsTextures]);\n    \n    const loadComplete = !!data && nextTilesetToload(data, tilesetsTextures) === undefined;\n\n    return {\n        loadComplete,\n        loadTilesets,\n        tilesetsTextures\n    }\n}\n\nexport default useTilesetsLoader;\n\n// Returns a TiledTilesetData that has not been loaded into tilesetsTextures yet\nconst nextTilesetToload = (tilesets: TiledTilesetData[], tilesetsTextures: {[key: string]: LoaderResource}) => {\n    return tilesets.find((t) => {\n        return !tilesetsTextures[t.name];\n    })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}